define(["require", "exports", "react/jsx-runtime", "react", "input-otp", "lucide-react", "@/lib/utils"], function (require, exports, jsx_runtime_1, React, input_otp_1, lucide_react_1, utils_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InputOTPSeparator = exports.InputOTPSlot = exports.InputOTPGroup = exports.InputOTP = void 0;
    const InputOTP = React.forwardRef(({ className, containerClassName, ...props }, ref) => ((0, jsx_runtime_1.jsx)(input_otp_1.OTPInput, { ref: ref, containerClassName: (0, utils_1.cn)("flex items-center gap-2 has-[:disabled]:opacity-50", containerClassName), className: (0, utils_1.cn)("disabled:cursor-not-allowed", className), ...props })));
    exports.InputOTP = InputOTP;
    InputOTP.displayName = "InputOTP";
    const InputOTPGroup = React.forwardRef(({ className, ...props }, ref) => ((0, jsx_runtime_1.jsx)("div", { ref: ref, className: (0, utils_1.cn)("flex items-center", className), ...props })));
    exports.InputOTPGroup = InputOTPGroup;
    InputOTPGroup.displayName = "InputOTPGroup";
    const InputOTPSlot = React.forwardRef(({ index, className, ...props }, ref) => {
        const inputOTPContext = React.useContext(input_otp_1.OTPInputContext);
        const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index];
        return ((0, jsx_runtime_1.jsxs)("div", { ref: ref, className: (0, utils_1.cn)("relative flex h-9 w-9 items-center justify-center border-y border-r border-input text-sm shadow-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md", isActive && "z-10 ring-1 ring-ring", className), ...props, children: [char, hasFakeCaret && ((0, jsx_runtime_1.jsx)("div", { className: "pointer-events-none absolute inset-0 flex items-center justify-center", children: (0, jsx_runtime_1.jsx)("div", { className: "h-4 w-px animate-caret-blink bg-foreground duration-1000" }) }))] }));
    });
    exports.InputOTPSlot = InputOTPSlot;
    InputOTPSlot.displayName = "InputOTPSlot";
    const InputOTPSeparator = React.forwardRef(({ ...props }, ref) => ((0, jsx_runtime_1.jsx)("div", { ref: ref, role: "separator", ...props, children: (0, jsx_runtime_1.jsx)(lucide_react_1.Minus, {}) })));
    exports.InputOTPSeparator = InputOTPSeparator;
    InputOTPSeparator.displayName = "InputOTPSeparator";
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtb3RwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdWkvaW5wdXQtb3RwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQUEsWUFBWSxDQUFDOzs7O0lBUWIsTUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FHL0IsQ0FBQyxFQUFFLFNBQVMsRUFBRSxrQkFBa0IsRUFBRSxHQUFHLEtBQUssRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FDdEQsdUJBQUMsb0JBQVEsSUFDUCxHQUFHLEVBQUUsR0FBRyxFQUNSLGtCQUFrQixFQUFFLElBQUEsVUFBRSxFQUNwQixvREFBb0QsRUFDcEQsa0JBQWtCLENBQ25CLEVBQ0QsU0FBUyxFQUFFLElBQUEsVUFBRSxFQUFDLDZCQUE2QixFQUFFLFNBQVMsQ0FBQyxLQUNuRCxLQUFLLEdBQ1QsQ0FDSCxDQUFDLENBQUM7SUFpRE0sNEJBQVE7SUFoRGpCLFFBQVEsQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDO0lBRWxDLE1BQU0sYUFBYSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBR3BDLENBQUMsRUFBRSxTQUFTLEVBQUUsR0FBRyxLQUFLLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQ2xDLGdDQUFLLEdBQUcsRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUEsVUFBRSxFQUFDLG1CQUFtQixFQUFFLFNBQVMsQ0FBQyxLQUFNLEtBQUssR0FBSSxDQUM1RSxDQUFDLENBQUM7SUF5Q2dCLHNDQUFhO0lBeENoQyxhQUFhLENBQUMsV0FBVyxHQUFHLGVBQWUsQ0FBQztJQUU1QyxNQUFNLFlBQVksR0FBRyxLQUFLLENBQUMsVUFBVSxDQUduQyxDQUFDLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxHQUFHLEtBQUssRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ3hDLE1BQU0sZUFBZSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUMsMkJBQWUsQ0FBQyxDQUFDO1FBQzFELE1BQU0sRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLFFBQVEsRUFBRSxHQUFHLGVBQWUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFdEUsT0FBTyxDQUNMLGlDQUNFLEdBQUcsRUFBRSxHQUFHLEVBQ1IsU0FBUyxFQUFFLElBQUEsVUFBRSxFQUNYLHVLQUF1SyxFQUN2SyxRQUFRLElBQUksdUJBQXVCLEVBQ25DLFNBQVMsQ0FDVixLQUNHLEtBQUssYUFFUixJQUFJLEVBQ0osWUFBWSxJQUFJLENBQ2YsZ0NBQUssU0FBUyxFQUFDLHVFQUF1RSxZQUNwRixnQ0FBSyxTQUFTLEVBQUMsMERBQTBELEdBQUcsR0FDeEUsQ0FDUCxJQUNHLENBQ1AsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0lBYStCLG9DQUFZO0lBWjlDLFlBQVksQ0FBQyxXQUFXLEdBQUcsY0FBYyxDQUFDO0lBRTFDLE1BQU0saUJBQWlCLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FHeEMsQ0FBQyxFQUFFLEdBQUcsS0FBSyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUN2QixnQ0FBSyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBQyxXQUFXLEtBQUssS0FBSyxZQUN2Qyx1QkFBQyxvQkFBSyxLQUFHLEdBQ0wsQ0FDUCxDQUFDLENBQUM7SUFHNkMsOENBQWlCO0lBRmpFLGlCQUFpQixDQUFDLFdBQVcsR0FBRyxtQkFBbUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IE9UUElucHV0LCBPVFBJbnB1dENvbnRleHQgfSBmcm9tIFwiaW5wdXQtb3RwXCI7XG5pbXBvcnQgeyBNaW51cyB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcblxuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIjtcblxuY29uc3QgSW5wdXRPVFAgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBPVFBJbnB1dD4sXG4gIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgT1RQSW5wdXQ+XG4+KCh7IGNsYXNzTmFtZSwgY29udGFpbmVyQ2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPE9UUElucHV0XG4gICAgcmVmPXtyZWZ9XG4gICAgY29udGFpbmVyQ2xhc3NOYW1lPXtjbihcbiAgICAgIFwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTIgaGFzLVs6ZGlzYWJsZWRdOm9wYWNpdHktNTBcIixcbiAgICAgIGNvbnRhaW5lckNsYXNzTmFtZSxcbiAgICApfVxuICAgIGNsYXNzTmFtZT17Y24oXCJkaXNhYmxlZDpjdXJzb3Itbm90LWFsbG93ZWRcIiwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKTtcbklucHV0T1RQLmRpc3BsYXlOYW1lID0gXCJJbnB1dE9UUFwiO1xuXG5jb25zdCBJbnB1dE9UUEdyb3VwID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgUmVhY3QuRWxlbWVudFJlZjxcImRpdlwiPixcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPFwiZGl2XCI+XG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gIDxkaXYgcmVmPXtyZWZ9IGNsYXNzTmFtZT17Y24oXCJmbGV4IGl0ZW1zLWNlbnRlclwiLCBjbGFzc05hbWUpfSB7Li4ucHJvcHN9IC8+XG4pKTtcbklucHV0T1RQR3JvdXAuZGlzcGxheU5hbWUgPSBcIklucHV0T1RQR3JvdXBcIjtcblxuY29uc3QgSW5wdXRPVFBTbG90ID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgUmVhY3QuRWxlbWVudFJlZjxcImRpdlwiPixcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPFwiZGl2XCI+ICYgeyBpbmRleDogbnVtYmVyIH1cbj4oKHsgaW5kZXgsIGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7XG4gIGNvbnN0IGlucHV0T1RQQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoT1RQSW5wdXRDb250ZXh0KTtcbiAgY29uc3QgeyBjaGFyLCBoYXNGYWtlQ2FyZXQsIGlzQWN0aXZlIH0gPSBpbnB1dE9UUENvbnRleHQuc2xvdHNbaW5kZXhdO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgcmVmPXtyZWZ9XG4gICAgICBjbGFzc05hbWU9e2NuKFxuICAgICAgICBcInJlbGF0aXZlIGZsZXggaC05IHctOSBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgYm9yZGVyLXkgYm9yZGVyLXIgYm9yZGVyLWlucHV0IHRleHQtc20gc2hhZG93LXNtIHRyYW5zaXRpb24tYWxsIGZpcnN0OnJvdW5kZWQtbC1tZCBmaXJzdDpib3JkZXItbCBsYXN0OnJvdW5kZWQtci1tZFwiLFxuICAgICAgICBpc0FjdGl2ZSAmJiBcInotMTAgcmluZy0xIHJpbmctcmluZ1wiLFxuICAgICAgICBjbGFzc05hbWUsXG4gICAgICApfVxuICAgICAgey4uLnByb3BzfVxuICAgID5cbiAgICAgIHtjaGFyfVxuICAgICAge2hhc0Zha2VDYXJldCAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9pbnRlci1ldmVudHMtbm9uZSBhYnNvbHV0ZSBpbnNldC0wIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoLTQgdy1weCBhbmltYXRlLWNhcmV0LWJsaW5rIGJnLWZvcmVncm91bmQgZHVyYXRpb24tMTAwMFwiIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn0pO1xuSW5wdXRPVFBTbG90LmRpc3BsYXlOYW1lID0gXCJJbnB1dE9UUFNsb3RcIjtcblxuY29uc3QgSW5wdXRPVFBTZXBhcmF0b3IgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBSZWFjdC5FbGVtZW50UmVmPFwiZGl2XCI+LFxuICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8XCJkaXZcIj5cbj4oKHsgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gIDxkaXYgcmVmPXtyZWZ9IHJvbGU9XCJzZXBhcmF0b3JcIiB7Li4ucHJvcHN9PlxuICAgIDxNaW51cyAvPlxuICA8L2Rpdj5cbikpO1xuSW5wdXRPVFBTZXBhcmF0b3IuZGlzcGxheU5hbWUgPSBcIklucHV0T1RQU2VwYXJhdG9yXCI7XG5cbmV4cG9ydCB7IElucHV0T1RQLCBJbnB1dE9UUEdyb3VwLCBJbnB1dE9UUFNsb3QsIElucHV0T1RQU2VwYXJhdG9yIH07XG4iXX0=