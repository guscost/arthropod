define(["require", "exports", "react/jsx-runtime", "react", "@radix-ui/react-dialog", "class-variance-authority", "lucide-react", "@/lib/utils"], function (require, exports, jsx_runtime_1, React, SheetPrimitive, class_variance_authority_1, lucide_react_1, utils_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SheetDescription = exports.SheetTitle = exports.SheetFooter = exports.SheetHeader = exports.SheetContent = exports.SheetClose = exports.SheetTrigger = exports.SheetOverlay = exports.SheetPortal = exports.Sheet = void 0;
    const Sheet = SheetPrimitive.Root;
    exports.Sheet = Sheet;
    const SheetTrigger = SheetPrimitive.Trigger;
    exports.SheetTrigger = SheetTrigger;
    const SheetClose = SheetPrimitive.Close;
    exports.SheetClose = SheetClose;
    const SheetPortal = SheetPrimitive.Portal;
    exports.SheetPortal = SheetPortal;
    const SheetOverlay = React.forwardRef(({ className, ...props }, ref) => ((0, jsx_runtime_1.jsx)(SheetPrimitive.Overlay, { className: (0, utils_1.cn)("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0", className), ...props, ref: ref })));
    exports.SheetOverlay = SheetOverlay;
    SheetOverlay.displayName = SheetPrimitive.Overlay.displayName;
    const sheetVariants = (0, class_variance_authority_1.cva)("fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out", {
        variants: {
            side: {
                top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
                bottom: "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
                left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
                right: "inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
            },
        },
        defaultVariants: {
            side: "right",
        },
    });
    const SheetContent = React.forwardRef(({ side = "right", className, children, ...props }, ref) => ((0, jsx_runtime_1.jsxs)(SheetPortal, { children: [(0, jsx_runtime_1.jsx)(SheetOverlay, {}), (0, jsx_runtime_1.jsxs)(SheetPrimitive.Content, { ref: ref, className: (0, utils_1.cn)(sheetVariants({ side }), className), ...props, children: [(0, jsx_runtime_1.jsxs)(SheetPrimitive.Close, { className: "absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.X, { className: "h-4 w-4" }), (0, jsx_runtime_1.jsx)("span", { className: "sr-only", children: "Close" })] }), children] })] })));
    exports.SheetContent = SheetContent;
    SheetContent.displayName = SheetPrimitive.Content.displayName;
    const SheetHeader = ({ className, ...props }) => ((0, jsx_runtime_1.jsx)("div", { className: (0, utils_1.cn)("flex flex-col space-y-2 text-center sm:text-left", className), ...props }));
    exports.SheetHeader = SheetHeader;
    SheetHeader.displayName = "SheetHeader";
    const SheetFooter = ({ className, ...props }) => ((0, jsx_runtime_1.jsx)("div", { className: (0, utils_1.cn)("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2", className), ...props }));
    exports.SheetFooter = SheetFooter;
    SheetFooter.displayName = "SheetFooter";
    const SheetTitle = React.forwardRef(({ className, ...props }, ref) => ((0, jsx_runtime_1.jsx)(SheetPrimitive.Title, { ref: ref, className: (0, utils_1.cn)("text-lg font-semibold text-foreground", className), ...props })));
    exports.SheetTitle = SheetTitle;
    SheetTitle.displayName = SheetPrimitive.Title.displayName;
    const SheetDescription = React.forwardRef(({ className, ...props }, ref) => ((0, jsx_runtime_1.jsx)(SheetPrimitive.Description, { ref: ref, className: (0, utils_1.cn)("text-sm text-muted-foreground", className), ...props })));
    exports.SheetDescription = SheetDescription;
    SheetDescription.displayName = SheetPrimitive.Description.displayName;
});
//# sourceMappingURL=data:application/json;base64,