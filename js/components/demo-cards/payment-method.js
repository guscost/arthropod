define(["require", "exports", "react/jsx-runtime", "@/components/ui/button", "@/components/ui/card", "@/components/ui/input", "@/components/ui/label", "@/components/ui/radio-group", "@/components/ui/select"], function (require, exports, jsx_runtime_1, button_1, card_1, input_1, label_1, radio_group_1, select_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CardsPaymentMethod = CardsPaymentMethod;
    const plans = [
        {
            id: "starter",
            name: "Starter Plan",
            description: "Perfect for small businesses.",
            price: "$10",
        },
        {
            id: "pro",
            name: "Pro Plan",
            description: "Advanced features with more storage.",
            price: "$20",
        },
    ];
    function CardsPaymentMethod() {
        return ((0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { children: "Payment Method" }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { children: "Add a new payment method to your account." })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: "flex flex-col gap-6", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-3", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "name", children: "Name" }), (0, jsx_runtime_1.jsx)(input_1.Input, { id: "name", placeholder: "First Last" })] }), (0, jsx_runtime_1.jsxs)("fieldset", { className: "flex flex-col gap-3", children: [(0, jsx_runtime_1.jsx)("legend", { className: "text-sm font-medium", children: "Plan" }), (0, jsx_runtime_1.jsx)("p", { className: "text-muted-foreground text-sm", children: "Select the plan that best fits your needs." }), (0, jsx_runtime_1.jsx)(radio_group_1.RadioGroup, { defaultValue: "starter", className: "grid gap-3", children: plans.map((plan) => ((0, jsx_runtime_1.jsxs)(label_1.Label, { className: "has-[[data-state=checked]]:border-ring has-[[data-state=checked]]:bg-primary/5 flex items-start gap-3 rounded-lg border p-3", children: [(0, jsx_runtime_1.jsx)(radio_group_1.RadioGroupItem, { value: plan.id, id: plan.name, className: "data-[state=checked]:border-primary" }), (0, jsx_runtime_1.jsxs)("div", { className: "grid gap-1 font-normal", children: [(0, jsx_runtime_1.jsx)("div", { className: "font-medium", children: plan.name }), (0, jsx_runtime_1.jsx)("div", { className: "text-muted-foreground pr-2 text-xs leading-snug text-balance", children: plan.description })] })] }, plan.id))) })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-3", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "number", children: "Card number" }), (0, jsx_runtime_1.jsx)(input_1.Input, { id: "number", placeholder: "" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-3 gap-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-3", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "month", children: "Expires" }), (0, jsx_runtime_1.jsxs)(select_1.Select, { children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, { id: "month", "aria-label": "Month", className: "w-full", children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, { placeholder: "Month" }) }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, { children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "1", children: "January" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "2", children: "February" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "3", children: "March" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "4", children: "April" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "5", children: "May" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "6", children: "June" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "7", children: "July" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "8", children: "August" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "9", children: "September" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "10", children: "October" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "11", children: "November" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "12", children: "December" })] })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-3", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "year", children: "Year" }), (0, jsx_runtime_1.jsxs)(select_1.Select, { children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, { id: "year", "aria-label": "Year", className: "w-full", children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, { placeholder: "Year" }) }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, { children: Array.from({ length: 10 }, (_, i) => ((0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: `${new Date().getFullYear() + i}`, children: new Date().getFullYear() + i }, i))) })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-3", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "cvc", children: "CVC" }), (0, jsx_runtime_1.jsx)(input_1.Input, { id: "cvc", placeholder: "CVC" })] })] })] }), (0, jsx_runtime_1.jsx)(card_1.CardFooter, { children: (0, jsx_runtime_1.jsx)(button_1.Button, { className: "w-full", children: "Continue" }) })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,