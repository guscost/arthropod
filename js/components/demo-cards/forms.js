define(["require", "exports", "react/jsx-runtime", "@/components/ui/button", "@/components/ui/card", "@/components/ui/checkbox", "@/components/ui/input", "@/components/ui/label", "@/components/ui/radio-group", "@/components/ui/textarea"], function (require, exports, jsx_runtime_1, button_1, card_1, checkbox_1, input_1, label_1, radio_group_1, textarea_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CardsForms = CardsForms;
    const plans = [
        {
            id: "starter",
            name: "Starter Plan",
            description: "Perfect for small businesses.",
            price: "$10",
        },
        {
            id: "pro",
            name: "Pro Plan",
            description: "More features and storage.",
            price: "$20",
        },
    ];
    function CardsForms() {
        return ((0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: "text-lg", children: "Upgrade your subscription" }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { className: "text-balance", children: "You are currently on the free plan. Upgrade to the pro plan to get access to all features." })] }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-6", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-3 md:flex-row", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex flex-1 flex-col gap-2", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "name", children: "Name" }), (0, jsx_runtime_1.jsx)(input_1.Input, { id: "name", placeholder: "Evil Rabbit" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-1 flex-col gap-2", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "email", children: "Email" }), (0, jsx_runtime_1.jsx)(input_1.Input, { id: "email", placeholder: "example@acme.com" })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-2", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "card-number", children: "Card Number" }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-3 md:grid-cols-[1fr_80px_60px]", children: [(0, jsx_runtime_1.jsx)(input_1.Input, { id: "card-number", placeholder: "1234 1234 1234 1234", className: "col-span-2 md:col-span-1" }), (0, jsx_runtime_1.jsx)(input_1.Input, { id: "card-number-expiry", placeholder: "MM/YY" }), (0, jsx_runtime_1.jsx)(input_1.Input, { id: "card-number-cvc", placeholder: "CVC" })] })] }), (0, jsx_runtime_1.jsxs)("fieldset", { className: "flex flex-col gap-3", children: [(0, jsx_runtime_1.jsx)("legend", { className: "text-sm font-medium", children: "Plan" }), (0, jsx_runtime_1.jsx)("p", { className: "text-muted-foreground text-sm", children: "Select the plan that best fits your needs." }), (0, jsx_runtime_1.jsx)(radio_group_1.RadioGroup, { defaultValue: "starter", className: "grid gap-3 md:grid-cols-2", children: plans.map((plan) => ((0, jsx_runtime_1.jsxs)(label_1.Label, { className: "has-[[data-state=checked]]:border-ring has-[[data-state=checked]]:bg-input/20 flex items-start gap-3 rounded-lg border p-3", children: [(0, jsx_runtime_1.jsx)(radio_group_1.RadioGroupItem, { value: plan.id, id: plan.name, className: "data-[state=checked]:border-primary" }), (0, jsx_runtime_1.jsxs)("div", { className: "grid gap-1 font-normal", children: [(0, jsx_runtime_1.jsx)("div", { className: "font-medium", children: plan.name }), (0, jsx_runtime_1.jsx)("div", { className: "text-muted-foreground text-xs leading-snug text-balance", children: plan.description })] })] }, plan.id))) })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-2", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "notes", children: "Notes" }), (0, jsx_runtime_1.jsx)(textarea_1.Textarea, { id: "notes", placeholder: "Enter notes" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-3", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, { id: "terms" }), (0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "terms", className: "font-normal", children: "I agree to the terms and conditions" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, { id: "newsletter", defaultChecked: true }), (0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "newsletter", className: "font-normal", children: "Allow us to send you emails" })] })] })] }) }), (0, jsx_runtime_1.jsxs)(card_1.CardFooter, { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)(button_1.Button, { variant: "outline", size: "sm", children: "Cancel" }), (0, jsx_runtime_1.jsx)(button_1.Button, { size: "sm", children: "Upgrade Plan" })] })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,