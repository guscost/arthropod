define(["require", "exports", "react/jsx-runtime", "@dnd-kit/sortable", "@dnd-kit/utilities", "@/components/ui/card", "@/components/ui/button", "class-variance-authority", "lucide-react", "@/components/ui/badge"], function (require, exports, jsx_runtime_1, sortable_1, utilities_1, card_1, button_1, class_variance_authority_1, lucide_react_1, badge_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TaskCard = TaskCard;
    function TaskCard({ task, isOverlay }) {
        const { setNodeRef, attributes, listeners, transform, transition, isDragging, } = (0, sortable_1.useSortable)({
            id: task.id,
            data: {
                type: "Task",
                task,
            },
            attributes: {
                roleDescription: "Task",
            },
        });
        const style = {
            transition,
            transform: utilities_1.CSS.Translate.toString(transform),
        };
        const variants = (0, class_variance_authority_1.cva)("gap-2 p-0", {
            variants: {
                dragging: {
                    over: "ring-2 opacity-30",
                    overlay: "ring-2 ring-primary",
                },
            },
        });
        return ((0, jsx_runtime_1.jsxs)(card_1.Card, { ref: setNodeRef, style: style, className: variants({
                dragging: isOverlay ? "overlay" : isDragging ? "over" : undefined,
            }), children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: "p-3 space-between flex flex-row border-b-2 border-secondary relative", children: [(0, jsx_runtime_1.jsxs)(button_1.Button, { variant: "ghost", ...attributes, ...listeners, className: "p-1 text-secondary-foreground/50 -ml-2 h-auto cursor-grab", children: [(0, jsx_runtime_1.jsx)("span", { className: "sr-only", children: "Move task" }), (0, jsx_runtime_1.jsx)(lucide_react_1.GripVertical, {})] }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: "outline", className: "ml-auto font-semibold", children: "Task" })] }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { className: "px-3 pt-3 pb-6 text-left whitespace-pre-wrap", children: task.content })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFza0NhcmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9kZW1vLWthbmJhbi9UYXNrQ2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0lBNEJBLDRCQTREQztJQTVERCxTQUFnQixRQUFRLENBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFpQjtRQUN6RCxNQUFNLEVBQ0osVUFBVSxFQUNWLFVBQVUsRUFDVixTQUFTLEVBQ1QsU0FBUyxFQUNULFVBQVUsRUFDVixVQUFVLEdBQ1gsR0FBRyxJQUFBLHNCQUFXLEVBQUM7WUFDZCxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUU7WUFDWCxJQUFJLEVBQUU7Z0JBQ0osSUFBSSxFQUFFLE1BQU07Z0JBQ1osSUFBSTthQUNrQjtZQUN4QixVQUFVLEVBQUU7Z0JBQ1YsZUFBZSxFQUFFLE1BQU07YUFDeEI7U0FDRixDQUFDLENBQUM7UUFFSCxNQUFNLEtBQUssR0FBRztZQUNaLFVBQVU7WUFDVixTQUFTLEVBQUUsZUFBRyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDO1NBQzdDLENBQUM7UUFFRixNQUFNLFFBQVEsR0FBRyxJQUFBLDhCQUFHLEVBQUMsV0FBVyxFQUFFO1lBQ2hDLFFBQVEsRUFBRTtnQkFDUixRQUFRLEVBQUU7b0JBQ1IsSUFBSSxFQUFFLG1CQUFtQjtvQkFDekIsT0FBTyxFQUFFLHFCQUFxQjtpQkFDL0I7YUFDRjtTQUNGLENBQUMsQ0FBQztRQUVILE9BQU8sQ0FDTCx3QkFBQyxXQUFJLElBQ0gsR0FBRyxFQUFFLFVBQVUsRUFDZixLQUFLLEVBQUUsS0FBSyxFQUNaLFNBQVMsRUFBRSxRQUFRLENBQUM7Z0JBQ2xCLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVM7YUFDbEUsQ0FBQyxhQUVGLHdCQUFDLGlCQUFVLElBQUMsU0FBUyxFQUFDLHNFQUFzRSxhQUMxRix3QkFBQyxlQUFNLElBQ0wsT0FBTyxFQUFFLE9BQU8sS0FDWixVQUFVLEtBQ1YsU0FBUyxFQUNiLFNBQVMsRUFBQywyREFBMkQsYUFFckUsaUNBQU0sU0FBUyxFQUFDLFNBQVMsMEJBQWlCLEVBQzFDLHVCQUFDLDJCQUFZLEtBQUcsSUFDVCxFQUNULHVCQUFDLGFBQUssSUFBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBQyx1QkFBdUIscUJBRXBELElBQ0csRUFDYix1QkFBQyxrQkFBVyxJQUFDLFNBQVMsRUFBQyw4Q0FBOEMsWUFDbEUsSUFBSSxDQUFDLE9BQU8sR0FDRCxJQUNULENBQ1IsQ0FBQztJQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFVuaXF1ZUlkZW50aWZpZXIgfSBmcm9tIFwiQGRuZC1raXQvY29yZVwiO1xuaW1wb3J0IHsgdXNlU29ydGFibGUgfSBmcm9tIFwiQGRuZC1raXQvc29ydGFibGVcIjtcbmltcG9ydCB7IENTUyB9IGZyb20gXCJAZG5kLWtpdC91dGlsaXRpZXNcIjtcbmltcG9ydCB7IENhcmQsIENhcmRDb250ZW50LCBDYXJkSGVhZGVyIH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9jYXJkXCI7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2J1dHRvblwiO1xuaW1wb3J0IHsgY3ZhIH0gZnJvbSBcImNsYXNzLXZhcmlhbmNlLWF1dGhvcml0eVwiO1xuaW1wb3J0IHsgR3JpcFZlcnRpY2FsIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiO1xuaW1wb3J0IHsgQmFkZ2UgfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2JhZGdlXCI7XG5pbXBvcnQgeyBDb2x1bW5JZCB9IGZyb20gXCIuL0thbmJhbkJvYXJkXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGFzayB7XG4gIGlkOiBVbmlxdWVJZGVudGlmaWVyO1xuICBjb2x1bW5JZDogQ29sdW1uSWQ7XG4gIGNvbnRlbnQ6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIFRhc2tDYXJkUHJvcHMge1xuICB0YXNrOiBUYXNrO1xuICBpc092ZXJsYXk/OiBib29sZWFuO1xufVxuXG5leHBvcnQgdHlwZSBUYXNrVHlwZSA9IFwiVGFza1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRhc2tEcmFnRGF0YSB7XG4gIHR5cGU6IFRhc2tUeXBlO1xuICB0YXNrOiBUYXNrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gVGFza0NhcmQoeyB0YXNrLCBpc092ZXJsYXkgfTogVGFza0NhcmRQcm9wcykge1xuICBjb25zdCB7XG4gICAgc2V0Tm9kZVJlZixcbiAgICBhdHRyaWJ1dGVzLFxuICAgIGxpc3RlbmVycyxcbiAgICB0cmFuc2Zvcm0sXG4gICAgdHJhbnNpdGlvbixcbiAgICBpc0RyYWdnaW5nLFxuICB9ID0gdXNlU29ydGFibGUoe1xuICAgIGlkOiB0YXNrLmlkLFxuICAgIGRhdGE6IHtcbiAgICAgIHR5cGU6IFwiVGFza1wiLFxuICAgICAgdGFzayxcbiAgICB9IHNhdGlzZmllcyBUYXNrRHJhZ0RhdGEsXG4gICAgYXR0cmlidXRlczoge1xuICAgICAgcm9sZURlc2NyaXB0aW9uOiBcIlRhc2tcIixcbiAgICB9LFxuICB9KTtcblxuICBjb25zdCBzdHlsZSA9IHtcbiAgICB0cmFuc2l0aW9uLFxuICAgIHRyYW5zZm9ybTogQ1NTLlRyYW5zbGF0ZS50b1N0cmluZyh0cmFuc2Zvcm0pLFxuICB9O1xuXG4gIGNvbnN0IHZhcmlhbnRzID0gY3ZhKFwiZ2FwLTIgcC0wXCIsIHtcbiAgICB2YXJpYW50czoge1xuICAgICAgZHJhZ2dpbmc6IHtcbiAgICAgICAgb3ZlcjogXCJyaW5nLTIgb3BhY2l0eS0zMFwiLFxuICAgICAgICBvdmVybGF5OiBcInJpbmctMiByaW5nLXByaW1hcnlcIixcbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8Q2FyZFxuICAgICAgcmVmPXtzZXROb2RlUmVmfVxuICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgY2xhc3NOYW1lPXt2YXJpYW50cyh7XG4gICAgICAgIGRyYWdnaW5nOiBpc092ZXJsYXkgPyBcIm92ZXJsYXlcIiA6IGlzRHJhZ2dpbmcgPyBcIm92ZXJcIiA6IHVuZGVmaW5lZCxcbiAgICAgIH0pfVxuICAgID5cbiAgICAgIDxDYXJkSGVhZGVyIGNsYXNzTmFtZT1cInAtMyBzcGFjZS1iZXR3ZWVuIGZsZXggZmxleC1yb3cgYm9yZGVyLWItMiBib3JkZXItc2Vjb25kYXJ5IHJlbGF0aXZlXCI+XG4gICAgICAgIDxCdXR0b25cbiAgICAgICAgICB2YXJpYW50PXtcImdob3N0XCJ9XG4gICAgICAgICAgey4uLmF0dHJpYnV0ZXN9XG4gICAgICAgICAgey4uLmxpc3RlbmVyc31cbiAgICAgICAgICBjbGFzc05hbWU9XCJwLTEgdGV4dC1zZWNvbmRhcnktZm9yZWdyb3VuZC81MCAtbWwtMiBoLWF1dG8gY3Vyc29yLWdyYWJcIlxuICAgICAgICA+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwic3Itb25seVwiPk1vdmUgdGFzazwvc3Bhbj5cbiAgICAgICAgICA8R3JpcFZlcnRpY2FsIC8+XG4gICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8QmFkZ2UgdmFyaWFudD17XCJvdXRsaW5lXCJ9IGNsYXNzTmFtZT1cIm1sLWF1dG8gZm9udC1zZW1pYm9sZFwiPlxuICAgICAgICAgIFRhc2tcbiAgICAgICAgPC9CYWRnZT5cbiAgICAgIDwvQ2FyZEhlYWRlcj5cbiAgICAgIDxDYXJkQ29udGVudCBjbGFzc05hbWU9XCJweC0zIHB0LTMgcGItNiB0ZXh0LWxlZnQgd2hpdGVzcGFjZS1wcmUtd3JhcFwiPlxuICAgICAgICB7dGFzay5jb250ZW50fVxuICAgICAgPC9DYXJkQ29udGVudD5cbiAgICA8L0NhcmQ+XG4gICk7XG59XG4iXX0=