define(["require", "exports", "react/jsx-runtime", "sonner", "@hookform/resolvers/zod", "react-hook-form", "zod", "@/components/ui/button", "@/components/ui/card", "@/components/ui/form", "@/components/ui/input"], function (require, exports, jsx_runtime_1, sonner_1, zod_1, react_hook_form_1, zod_2, button_1, card_1, form_1, input_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FormDemo = FormDemo;
    const formSchema = zod_2.z.object({
        email: zod_2.z.string().email("Must be a valid email."),
        password: zod_2.z.string().min(8, {
            message: "Password must be at least 8 characters.",
        }),
    });
    function FormDemo() {
        // 1. Define your form.
        const form = (0, react_hook_form_1.useForm)({
            resolver: (0, zod_1.zodResolver)(formSchema),
            defaultValues: {
                email: "",
                password: "",
            },
        });
        // 2. Define a submit handler.
        function onSubmit(values) {
            (0, sonner_1.toast)("Submitted:", {
                description: JSON.stringify(values, null, 2),
            });
        }
        return ((0, jsx_runtime_1.jsxs)(card_1.Card, { className: "w-96", children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, { children: "Form Demo" }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsx)(form_1.Form, { ...form, children: (0, jsx_runtime_1.jsxs)("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-8", children: [(0, jsx_runtime_1.jsx)(form_1.FormField, { control: form.control, name: "email", render: ({ field }) => ((0, jsx_runtime_1.jsxs)(form_1.FormItem, { children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, { children: "Email" }), (0, jsx_runtime_1.jsx)(form_1.FormControl, { children: (0, jsx_runtime_1.jsx)(input_1.Input, { placeholder: "test@example.com", ...field }) }), (0, jsx_runtime_1.jsx)(form_1.FormDescription, { children: "This email will not be shared with anyone." }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})] })) }), (0, jsx_runtime_1.jsx)(form_1.FormField, { control: form.control, name: "password", render: ({ field }) => ((0, jsx_runtime_1.jsxs)(form_1.FormItem, { children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, { children: "Password" }), (0, jsx_runtime_1.jsx)(form_1.FormControl, { children: (0, jsx_runtime_1.jsx)(input_1.Input, { type: "password", placeholder: "", ...field }) }), (0, jsx_runtime_1.jsx)(form_1.FormDescription, { children: "Choose a strong password." }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})] })) }), (0, jsx_runtime_1.jsx)(button_1.Button, { type: "submit", children: "Submit" })] }) }) })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9kZW1vLWZvcm0vaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7SUFBQSxZQUFZLENBQUM7OztJQTJCYiw0QkEyREM7SUFsRUQsTUFBTSxVQUFVLEdBQUcsT0FBQyxDQUFDLE1BQU0sQ0FBQztRQUMxQixLQUFLLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyx3QkFBd0IsQ0FBQztRQUNqRCxRQUFRLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7WUFDMUIsT0FBTyxFQUFFLHlDQUF5QztTQUNuRCxDQUFDO0tBQ0gsQ0FBQyxDQUFDO0lBRUgsU0FBZ0IsUUFBUTtRQUN0Qix1QkFBdUI7UUFDdkIsTUFBTSxJQUFJLEdBQUcsSUFBQSx5QkFBTyxFQUE2QjtZQUMvQyxRQUFRLEVBQUUsSUFBQSxpQkFBVyxFQUFDLFVBQVUsQ0FBQztZQUNqQyxhQUFhLEVBQUU7Z0JBQ2IsS0FBSyxFQUFFLEVBQUU7Z0JBQ1QsUUFBUSxFQUFFLEVBQUU7YUFDYjtTQUNGLENBQUMsQ0FBQztRQUVILDhCQUE4QjtRQUM5QixTQUFTLFFBQVEsQ0FBQyxNQUFrQztZQUNsRCxJQUFBLGNBQUssRUFBQyxZQUFZLEVBQUU7Z0JBQ2xCLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO2FBQzdDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFRCxPQUFPLENBQ0wsd0JBQUMsV0FBSSxJQUFDLFNBQVMsRUFBQyxNQUFNLGFBQ3BCLHVCQUFDLGlCQUFVLDRCQUF1QixFQUNsQyx1QkFBQyxrQkFBVyxjQUNWLHVCQUFDLFdBQUksT0FBSyxJQUFJLFlBQ1osa0NBQU0sUUFBUSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLEVBQUUsU0FBUyxFQUFDLFdBQVcsYUFDaEUsdUJBQUMsZ0JBQVMsSUFDUixPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFDckIsSUFBSSxFQUFDLE9BQU8sRUFDWixNQUFNLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUNyQix3QkFBQyxlQUFRLGVBQ1AsdUJBQUMsZ0JBQVMsd0JBQWtCLEVBQzVCLHVCQUFDLGtCQUFXLGNBQ1YsdUJBQUMsYUFBSyxJQUFDLFdBQVcsRUFBQyxrQkFBa0IsS0FBSyxLQUFLLEdBQUksR0FDdkMsRUFDZCx1QkFBQyxzQkFBZSw2REFFRSxFQUNsQix1QkFBQyxrQkFBVyxLQUFHLElBQ04sQ0FDWixHQUNELEVBQ0YsdUJBQUMsZ0JBQVMsSUFDUixPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFDckIsSUFBSSxFQUFDLFVBQVUsRUFDZixNQUFNLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUNyQix3QkFBQyxlQUFRLGVBQ1AsdUJBQUMsZ0JBQVMsMkJBQXFCLEVBQy9CLHVCQUFDLGtCQUFXLGNBQ1YsdUJBQUMsYUFBSyxJQUFDLElBQUksRUFBQyxVQUFVLEVBQUMsV0FBVyxFQUFDLEVBQUUsS0FBSyxLQUFLLEdBQUksR0FDdkMsRUFDZCx1QkFBQyxzQkFBZSw0Q0FBNEMsRUFDNUQsdUJBQUMsa0JBQVcsS0FBRyxJQUNOLENBQ1osR0FDRCxFQUNGLHVCQUFDLGVBQU0sSUFBQyxJQUFJLEVBQUMsUUFBUSx1QkFBZ0IsSUFDaEMsR0FDRixHQUNLLElBQ1QsQ0FDUixDQUFDO0lBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xyXG5cclxuaW1wb3J0IHsgdG9hc3QgfSBmcm9tIFwic29ubmVyXCI7XHJcbmltcG9ydCB7IHpvZFJlc29sdmVyIH0gZnJvbSBcIkBob29rZm9ybS9yZXNvbHZlcnMvem9kXCI7XHJcbmltcG9ydCB7IHVzZUZvcm0gfSBmcm9tIFwicmVhY3QtaG9vay1mb3JtXCI7XHJcbmltcG9ydCB7IHogfSBmcm9tIFwiem9kXCI7XHJcblxyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2J1dHRvblwiO1xyXG5pbXBvcnQgeyBDYXJkLCBDYXJkQ29udGVudCwgQ2FyZEhlYWRlciB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvY2FyZFwiO1xyXG5pbXBvcnQge1xyXG4gIEZvcm0sXHJcbiAgRm9ybUNvbnRyb2wsXHJcbiAgRm9ybURlc2NyaXB0aW9uLFxyXG4gIEZvcm1GaWVsZCxcclxuICBGb3JtSXRlbSxcclxuICBGb3JtTGFiZWwsXHJcbiAgRm9ybU1lc3NhZ2UsXHJcbn0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9mb3JtXCI7XHJcbmltcG9ydCB7IElucHV0IH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9pbnB1dFwiO1xyXG5cclxuY29uc3QgZm9ybVNjaGVtYSA9IHoub2JqZWN0KHtcclxuICBlbWFpbDogei5zdHJpbmcoKS5lbWFpbChcIk11c3QgYmUgYSB2YWxpZCBlbWFpbC5cIiksXHJcbiAgcGFzc3dvcmQ6IHouc3RyaW5nKCkubWluKDgsIHtcclxuICAgIG1lc3NhZ2U6IFwiUGFzc3dvcmQgbXVzdCBiZSBhdCBsZWFzdCA4IGNoYXJhY3RlcnMuXCIsXHJcbiAgfSksXHJcbn0pO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIEZvcm1EZW1vKCkge1xyXG4gIC8vIDEuIERlZmluZSB5b3VyIGZvcm0uXHJcbiAgY29uc3QgZm9ybSA9IHVzZUZvcm08ei5pbmZlcjx0eXBlb2YgZm9ybVNjaGVtYT4+KHtcclxuICAgIHJlc29sdmVyOiB6b2RSZXNvbHZlcihmb3JtU2NoZW1hKSxcclxuICAgIGRlZmF1bHRWYWx1ZXM6IHtcclxuICAgICAgZW1haWw6IFwiXCIsXHJcbiAgICAgIHBhc3N3b3JkOiBcIlwiLFxyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbiAgLy8gMi4gRGVmaW5lIGEgc3VibWl0IGhhbmRsZXIuXHJcbiAgZnVuY3Rpb24gb25TdWJtaXQodmFsdWVzOiB6LmluZmVyPHR5cGVvZiBmb3JtU2NoZW1hPikge1xyXG4gICAgdG9hc3QoXCJTdWJtaXR0ZWQ6XCIsIHtcclxuICAgICAgZGVzY3JpcHRpb246IEpTT04uc3RyaW5naWZ5KHZhbHVlcywgbnVsbCwgMiksXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8Q2FyZCBjbGFzc05hbWU9XCJ3LTk2XCI+XHJcbiAgICAgIDxDYXJkSGVhZGVyPkZvcm0gRGVtbzwvQ2FyZEhlYWRlcj5cclxuICAgICAgPENhcmRDb250ZW50PlxyXG4gICAgICAgIDxGb3JtIHsuLi5mb3JtfT5cclxuICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXtmb3JtLmhhbmRsZVN1Ym1pdChvblN1Ym1pdCl9IGNsYXNzTmFtZT1cInNwYWNlLXktOFwiPlxyXG4gICAgICAgICAgICA8Rm9ybUZpZWxkXHJcbiAgICAgICAgICAgICAgY29udHJvbD17Zm9ybS5jb250cm9sfVxyXG4gICAgICAgICAgICAgIG5hbWU9XCJlbWFpbFwiXHJcbiAgICAgICAgICAgICAgcmVuZGVyPXsoeyBmaWVsZCB9KSA9PiAoXHJcbiAgICAgICAgICAgICAgICA8Rm9ybUl0ZW0+XHJcbiAgICAgICAgICAgICAgICAgIDxGb3JtTGFiZWw+RW1haWw8L0Zvcm1MYWJlbD5cclxuICAgICAgICAgICAgICAgICAgPEZvcm1Db250cm9sPlxyXG4gICAgICAgICAgICAgICAgICAgIDxJbnB1dCBwbGFjZWhvbGRlcj1cInRlc3RAZXhhbXBsZS5jb21cIiB7Li4uZmllbGR9IC8+XHJcbiAgICAgICAgICAgICAgICAgIDwvRm9ybUNvbnRyb2w+XHJcbiAgICAgICAgICAgICAgICAgIDxGb3JtRGVzY3JpcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgVGhpcyBlbWFpbCB3aWxsIG5vdCBiZSBzaGFyZWQgd2l0aCBhbnlvbmUuXHJcbiAgICAgICAgICAgICAgICAgIDwvRm9ybURlc2NyaXB0aW9uPlxyXG4gICAgICAgICAgICAgICAgICA8Rm9ybU1lc3NhZ2UgLz5cclxuICAgICAgICAgICAgICAgIDwvRm9ybUl0ZW0+XHJcbiAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPEZvcm1GaWVsZFxyXG4gICAgICAgICAgICAgIGNvbnRyb2w9e2Zvcm0uY29udHJvbH1cclxuICAgICAgICAgICAgICBuYW1lPVwicGFzc3dvcmRcIlxyXG4gICAgICAgICAgICAgIHJlbmRlcj17KHsgZmllbGQgfSkgPT4gKFxyXG4gICAgICAgICAgICAgICAgPEZvcm1JdGVtPlxyXG4gICAgICAgICAgICAgICAgICA8Rm9ybUxhYmVsPlBhc3N3b3JkPC9Gb3JtTGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgIDxGb3JtQ29udHJvbD5cclxuICAgICAgICAgICAgICAgICAgICA8SW5wdXQgdHlwZT1cInBhc3N3b3JkXCIgcGxhY2Vob2xkZXI9XCJcIiB7Li4uZmllbGR9IC8+XHJcbiAgICAgICAgICAgICAgICAgIDwvRm9ybUNvbnRyb2w+XHJcbiAgICAgICAgICAgICAgICAgIDxGb3JtRGVzY3JpcHRpb24+Q2hvb3NlIGEgc3Ryb25nIHBhc3N3b3JkLjwvRm9ybURlc2NyaXB0aW9uPlxyXG4gICAgICAgICAgICAgICAgICA8Rm9ybU1lc3NhZ2UgLz5cclxuICAgICAgICAgICAgICAgIDwvRm9ybUl0ZW0+XHJcbiAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPEJ1dHRvbiB0eXBlPVwic3VibWl0XCI+U3VibWl0PC9CdXR0b24+XHJcbiAgICAgICAgICA8L2Zvcm0+XHJcbiAgICAgICAgPC9Gb3JtPlxyXG4gICAgICA8L0NhcmRDb250ZW50PlxyXG4gICAgPC9DYXJkPlxyXG4gICk7XHJcbn1cclxuIl19