define(["require", "exports", "react/jsx-runtime", "react", "swr", "@/components/ui/card", "../ui/tabs"], function (require, exports, jsx_runtime_1, react_1, swr_1, card_1, tabs_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SwrDemo = SwrDemo;
    function SwrDemo() {
        const [planets, setPlanets] = (0, react_1.useState)([]);
        (0, swr_1.default)("https://swapi.info/api/planets", (url) => fetch(url).then(async (res) => setPlanets(await res.json())));
        return ((0, jsx_runtime_1.jsxs)(card_1.Card, { className: "w-96", children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, { children: "Fetch with SWR" }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsxs)(tabs_1.Tabs, { defaultValue: "Tatooine", children: [(0, jsx_runtime_1.jsx)(tabs_1.TabsList, { className: "w-[340px] overflow-x-auto h-16 justify-start", children: planets.map((planet, index) => planet.name !== "unknown" && ((0, jsx_runtime_1.jsx)(tabs_1.TabsTrigger, { value: planet.name, children: planet.name }, index))) }), planets.map((planet, index) => planet.name !== "unknown" && ((0, jsx_runtime_1.jsx)(tabs_1.TabsContent, { value: planet.name, className: "h-96", children: (0, jsx_runtime_1.jsxs)("ul", { className: "my-6 ml-6 list-disc [&>li]:mt-2", children: [(0, jsx_runtime_1.jsxs)("li", { children: ["Name: ", planet.name] }), (0, jsx_runtime_1.jsxs)("li", { children: ["Climate: ", planet.climate] }), (0, jsx_runtime_1.jsxs)("li", { children: ["Terrain: ", planet.terrain] }), (0, jsx_runtime_1.jsxs)("li", { children: ["Surface Water: ", planet.surface_water] }), (0, jsx_runtime_1.jsxs)("li", { children: ["Diameter: ", planet.diameter] }), (0, jsx_runtime_1.jsxs)("li", { children: ["Gravity: ", planet.gravity] }), (0, jsx_runtime_1.jsxs)("li", { children: ["Orbital Period: ", planet.orbital_period] }), (0, jsx_runtime_1.jsxs)("li", { children: ["Rotation Period: ", planet.rotation_period] }), (0, jsx_runtime_1.jsxs)("li", { children: ["Population: ", planet.population] })] }) }, index)))] }) })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9kZW1vLXN3ci9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0lBbUJBLDBCQTRDQztJQTVDRCxTQUFnQixPQUFPO1FBQ3JCLE1BQU0sQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLEdBQUcsSUFBQSxnQkFBUSxFQUFnQixFQUFFLENBQUMsQ0FBQztRQUUxRCxJQUFBLGFBQU0sRUFBQyxnQ0FBZ0MsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQy9DLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FDN0QsQ0FBQztRQUVGLE9BQU8sQ0FDTCx3QkFBQyxXQUFJLElBQUMsU0FBUyxFQUFDLE1BQU0sYUFDcEIsdUJBQUMsaUJBQVUsaUNBQTRCLEVBQ3ZDLHVCQUFDLGtCQUFXLGNBQ1Ysd0JBQUMsV0FBSSxJQUFDLFlBQVksRUFBQyxVQUFVLGFBQzNCLHVCQUFDLGVBQVEsSUFBQyxTQUFTLEVBQUMsOENBQThDLFlBQy9ELE9BQU8sQ0FBQyxHQUFHLENBQ1YsQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FDaEIsTUFBTSxDQUFDLElBQUksS0FBSyxTQUFTLElBQUksQ0FDM0IsdUJBQUMsa0JBQVcsSUFBYSxLQUFLLEVBQUUsTUFBTSxDQUFDLElBQUksWUFDeEMsTUFBTSxDQUFDLElBQUksSUFESSxLQUFLLENBRVQsQ0FDZixDQUNKLEdBQ1EsRUFDVixPQUFPLENBQUMsR0FBRyxDQUNWLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFLENBQ2hCLE1BQU0sQ0FBQyxJQUFJLEtBQUssU0FBUyxJQUFJLENBQzNCLHVCQUFDLGtCQUFXLElBQWEsS0FBSyxFQUFFLE1BQU0sQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFDLE1BQU0sWUFDM0QsZ0NBQUksU0FBUyxFQUFDLGlDQUFpQyxhQUM3QyxxREFBVyxNQUFNLENBQUMsSUFBSSxJQUFNLEVBQzVCLHdEQUFjLE1BQU0sQ0FBQyxPQUFPLElBQU0sRUFDbEMsd0RBQWMsTUFBTSxDQUFDLE9BQU8sSUFBTSxFQUNsQyw4REFBb0IsTUFBTSxDQUFDLGFBQWEsSUFBTSxFQUM5Qyx5REFBZSxNQUFNLENBQUMsUUFBUSxJQUFNLEVBQ3BDLHdEQUFjLE1BQU0sQ0FBQyxPQUFPLElBQU0sRUFDbEMsK0RBQXFCLE1BQU0sQ0FBQyxjQUFjLElBQU0sRUFDaEQsZ0VBQXNCLE1BQU0sQ0FBQyxlQUFlLElBQU0sRUFDbEQsMkRBQWlCLE1BQU0sQ0FBQyxVQUFVLElBQU0sSUFDckMsSUFYVyxLQUFLLENBWVQsQ0FDZixDQUNKLElBQ0ksR0FDSyxJQUNULENBQ1IsQ0FBQztJQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHVzZVN3ciBmcm9tIFwic3dyXCI7XG5cbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvYnV0dG9uXCI7XG5pbXBvcnQgeyBDYXJkLCBDYXJkQ29udGVudCwgQ2FyZEhlYWRlciB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvY2FyZFwiO1xuaW1wb3J0IHsgVGFicywgVGFic0xpc3QsIFRhYnNUcmlnZ2VyLCBUYWJzQ29udGVudCB9IGZyb20gXCIuLi91aS90YWJzXCI7XG5cbnR5cGUgUGxhbmV0ID0ge1xuICBuYW1lOiBzdHJpbmc7XG4gIHJvdGF0aW9uX3BlcmlvZDogc3RyaW5nO1xuICBvcmJpdGFsX3BlcmlvZDogc3RyaW5nO1xuICBkaWFtZXRlcjogc3RyaW5nO1xuICBjbGltYXRlOiBzdHJpbmc7XG4gIGdyYXZpdHk6IHN0cmluZztcbiAgdGVycmFpbjogc3RyaW5nO1xuICBzdXJmYWNlX3dhdGVyOiBzdHJpbmc7XG4gIHBvcHVsYXRpb246IHN0cmluZztcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBTd3JEZW1vKCkge1xuICBjb25zdCBbcGxhbmV0cywgc2V0UGxhbmV0c10gPSB1c2VTdGF0ZTxBcnJheTxQbGFuZXQ+PihbXSk7XG5cbiAgdXNlU3dyKFwiaHR0cHM6Ly9zd2FwaS5pbmZvL2FwaS9wbGFuZXRzXCIsICh1cmwpID0+XG4gICAgZmV0Y2godXJsKS50aGVuKGFzeW5jIChyZXMpID0+IHNldFBsYW5ldHMoYXdhaXQgcmVzLmpzb24oKSkpLFxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPENhcmQgY2xhc3NOYW1lPVwidy05NlwiPlxuICAgICAgPENhcmRIZWFkZXI+RmV0Y2ggd2l0aCBTV1I8L0NhcmRIZWFkZXI+XG4gICAgICA8Q2FyZENvbnRlbnQ+XG4gICAgICAgIDxUYWJzIGRlZmF1bHRWYWx1ZT1cIlRhdG9vaW5lXCI+XG4gICAgICAgICAgPFRhYnNMaXN0IGNsYXNzTmFtZT1cInctWzM0MHB4XSBvdmVyZmxvdy14LWF1dG8gaC0xNiBqdXN0aWZ5LXN0YXJ0XCI+XG4gICAgICAgICAgICB7cGxhbmV0cy5tYXAoXG4gICAgICAgICAgICAgIChwbGFuZXQsIGluZGV4KSA9PlxuICAgICAgICAgICAgICAgIHBsYW5ldC5uYW1lICE9PSBcInVua25vd25cIiAmJiAoXG4gICAgICAgICAgICAgICAgICA8VGFic1RyaWdnZXIga2V5PXtpbmRleH0gdmFsdWU9e3BsYW5ldC5uYW1lfT5cbiAgICAgICAgICAgICAgICAgICAge3BsYW5ldC5uYW1lfVxuICAgICAgICAgICAgICAgICAgPC9UYWJzVHJpZ2dlcj5cbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L1RhYnNMaXN0PlxuICAgICAgICAgIHtwbGFuZXRzLm1hcChcbiAgICAgICAgICAgIChwbGFuZXQsIGluZGV4KSA9PlxuICAgICAgICAgICAgICBwbGFuZXQubmFtZSAhPT0gXCJ1bmtub3duXCIgJiYgKFxuICAgICAgICAgICAgICAgIDxUYWJzQ29udGVudCBrZXk9e2luZGV4fSB2YWx1ZT17cGxhbmV0Lm5hbWV9IGNsYXNzTmFtZT1cImgtOTZcIj5cbiAgICAgICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJteS02IG1sLTYgbGlzdC1kaXNjIFsmPmxpXTptdC0yXCI+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5OYW1lOiB7cGxhbmV0Lm5hbWV9PC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPkNsaW1hdGU6IHtwbGFuZXQuY2xpbWF0ZX08L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+VGVycmFpbjoge3BsYW5ldC50ZXJyYWlufTwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5TdXJmYWNlIFdhdGVyOiB7cGxhbmV0LnN1cmZhY2Vfd2F0ZXJ9PC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPkRpYW1ldGVyOiB7cGxhbmV0LmRpYW1ldGVyfTwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5HcmF2aXR5OiB7cGxhbmV0LmdyYXZpdHl9PC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPk9yYml0YWwgUGVyaW9kOiB7cGxhbmV0Lm9yYml0YWxfcGVyaW9kfTwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5Sb3RhdGlvbiBQZXJpb2Q6IHtwbGFuZXQucm90YXRpb25fcGVyaW9kfTwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5Qb3B1bGF0aW9uOiB7cGxhbmV0LnBvcHVsYXRpb259PC9saT5cbiAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC9UYWJzQ29udGVudD5cbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICApfVxuICAgICAgICA8L1RhYnM+XG4gICAgICA8L0NhcmRDb250ZW50PlxuICAgIDwvQ2FyZD5cbiAgKTtcbn1cbiJdfQ==