define(["require", "exports", "react/jsx-runtime", "@radix-ui/react-slot", "class-variance-authority", "@/lib/utils", "@/components/ui/separator"], function (require, exports, jsx_runtime_1, react_slot_1, class_variance_authority_1, utils_1, separator_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Item = Item;
    exports.ItemMedia = ItemMedia;
    exports.ItemContent = ItemContent;
    exports.ItemActions = ItemActions;
    exports.ItemGroup = ItemGroup;
    exports.ItemSeparator = ItemSeparator;
    exports.ItemTitle = ItemTitle;
    exports.ItemDescription = ItemDescription;
    exports.ItemHeader = ItemHeader;
    exports.ItemFooter = ItemFooter;
    function ItemGroup({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("div", { role: "list", "data-slot": "item-group", className: (0, utils_1.cn)("group/item-group flex flex-col", className), ...props }));
    }
    function ItemSeparator({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)(separator_1.Separator, { "data-slot": "item-separator", orientation: "horizontal", className: (0, utils_1.cn)("my-0", className), ...props }));
    }
    const itemVariants = (0, class_variance_authority_1.cva)("group/item flex items-center border border-transparent text-sm rounded-md transition-colors [a]:hover:bg-accent/50 [a]:transition-colors duration-100 flex-wrap outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]", {
        variants: {
            variant: {
                default: "bg-transparent",
                outline: "border-border",
                muted: "bg-muted/50",
            },
            size: {
                default: "p-4 gap-4 ",
                sm: "py-3 px-4 gap-2.5",
            },
        },
        defaultVariants: {
            variant: "default",
            size: "default",
        },
    });
    function Item({ className, variant = "default", size = "default", asChild = false, ...props }) {
        const Comp = asChild ? react_slot_1.Slot : "div";
        return ((0, jsx_runtime_1.jsx)(Comp, { "data-slot": "item", "data-variant": variant, "data-size": size, className: (0, utils_1.cn)(itemVariants({ variant, size, className })), ...props }));
    }
    const itemMediaVariants = (0, class_variance_authority_1.cva)("flex shrink-0 items-center justify-center gap-2 group-has-[[data-slot=item-description]]/item:self-start [&_svg]:pointer-events-none group-has-[[data-slot=item-description]]/item:translate-y-0.5", {
        variants: {
            variant: {
                default: "bg-transparent",
                icon: "size-8 border rounded-sm bg-muted [&_svg:not([class*='size-'])]:size-4",
                image: "size-10 rounded-sm overflow-hidden [&_img]:size-full [&_img]:object-cover",
            },
        },
        defaultVariants: {
            variant: "default",
        },
    });
    function ItemMedia({ className, variant = "default", ...props }) {
        return ((0, jsx_runtime_1.jsx)("div", { "data-slot": "item-media", "data-variant": variant, className: (0, utils_1.cn)(itemMediaVariants({ variant, className })), ...props }));
    }
    function ItemContent({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("div", { "data-slot": "item-content", className: (0, utils_1.cn)("flex flex-1 flex-col gap-1 [&+[data-slot=item-content]]:flex-none", className), ...props }));
    }
    function ItemTitle({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("div", { "data-slot": "item-title", className: (0, utils_1.cn)("flex w-fit items-center gap-2 text-sm leading-snug font-medium", className), ...props }));
    }
    function ItemDescription({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("p", { "data-slot": "item-description", className: (0, utils_1.cn)("text-muted-foreground line-clamp-2 text-sm leading-normal font-normal text-balance", "[&>a:hover]:text-primary [&>a]:underline [&>a]:underline-offset-4", className), ...props }));
    }
    function ItemActions({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("div", { "data-slot": "item-actions", className: (0, utils_1.cn)("flex items-center gap-2", className), ...props }));
    }
    function ItemHeader({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("div", { "data-slot": "item-header", className: (0, utils_1.cn)("flex basis-full items-center justify-between gap-2", className), ...props }));
    }
    function ItemFooter({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("div", { "data-slot": "item-footer", className: (0, utils_1.cn)("flex basis-full items-center justify-between gap-2", className), ...props }));
    }
});
//# sourceMappingURL=data:application/json;base64,