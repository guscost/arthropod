define(["require", "exports", "react/jsx-runtime", "react", "@radix-ui/react-navigation-menu", "class-variance-authority", "lucide-react", "@/lib/utils"], function (require, exports, jsx_runtime_1, React, NavigationMenuPrimitive, class_variance_authority_1, lucide_react_1, utils_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NavigationMenuViewport = exports.NavigationMenuIndicator = exports.NavigationMenuLink = exports.NavigationMenuTrigger = exports.NavigationMenuContent = exports.NavigationMenuItem = exports.NavigationMenuList = exports.NavigationMenu = exports.navigationMenuTriggerStyle = void 0;
    const NavigationMenu = React.forwardRef(({ className, children, ...props }, ref) => ((0, jsx_runtime_1.jsxs)(NavigationMenuPrimitive.Root, { ref: ref, className: (0, utils_1.cn)("relative z-10 flex max-w-max flex-1 items-center justify-center", className), ...props, children: [children, (0, jsx_runtime_1.jsx)(NavigationMenuViewport, {})] })));
    exports.NavigationMenu = NavigationMenu;
    NavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName;
    const NavigationMenuList = React.forwardRef(({ className, ...props }, ref) => ((0, jsx_runtime_1.jsx)(NavigationMenuPrimitive.List, { ref: ref, className: (0, utils_1.cn)("group flex flex-1 list-none items-center justify-center space-x-1", className), ...props })));
    exports.NavigationMenuList = NavigationMenuList;
    NavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName;
    const NavigationMenuItem = NavigationMenuPrimitive.Item;
    exports.NavigationMenuItem = NavigationMenuItem;
    const navigationMenuTriggerStyle = (0, class_variance_authority_1.cva)("group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent");
    exports.navigationMenuTriggerStyle = navigationMenuTriggerStyle;
    const NavigationMenuTrigger = React.forwardRef(({ className, children, ...props }, ref) => ((0, jsx_runtime_1.jsxs)(NavigationMenuPrimitive.Trigger, { ref: ref, className: (0, utils_1.cn)(navigationMenuTriggerStyle(), "group", className), ...props, children: [children, " ", (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronDown, { className: "relative top-[1px] ml-1 h-3 w-3 transition duration-300 group-data-[state=open]:rotate-180", "aria-hidden": "true" })] })));
    exports.NavigationMenuTrigger = NavigationMenuTrigger;
    NavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName;
    const NavigationMenuContent = React.forwardRef(({ className, ...props }, ref) => ((0, jsx_runtime_1.jsx)(NavigationMenuPrimitive.Content, { ref: ref, className: (0, utils_1.cn)("left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto ", className), ...props })));
    exports.NavigationMenuContent = NavigationMenuContent;
    NavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName;
    const NavigationMenuLink = NavigationMenuPrimitive.Link;
    exports.NavigationMenuLink = NavigationMenuLink;
    const NavigationMenuViewport = React.forwardRef(({ className, ...props }, ref) => ((0, jsx_runtime_1.jsx)("div", { className: (0, utils_1.cn)("absolute left-0 top-full flex justify-center"), children: (0, jsx_runtime_1.jsx)(NavigationMenuPrimitive.Viewport, { className: (0, utils_1.cn)("origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]", className), ref: ref, ...props }) })));
    exports.NavigationMenuViewport = NavigationMenuViewport;
    NavigationMenuViewport.displayName =
        NavigationMenuPrimitive.Viewport.displayName;
    const NavigationMenuIndicator = React.forwardRef(({ className, ...props }, ref) => ((0, jsx_runtime_1.jsx)(NavigationMenuPrimitive.Indicator, { ref: ref, className: (0, utils_1.cn)("top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in", className), ...props, children: (0, jsx_runtime_1.jsx)("div", { className: "relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md" }) })));
    exports.NavigationMenuIndicator = NavigationMenuIndicator;
    NavigationMenuIndicator.displayName =
        NavigationMenuPrimitive.Indicator.displayName;
});
//# sourceMappingURL=data:application/json;base64,