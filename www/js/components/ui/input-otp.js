define(["require", "exports", "react/jsx-runtime", "react", "input-otp", "lucide-react", "@/lib/utils"], function (require, exports, jsx_runtime_1, React, input_otp_1, lucide_react_1, utils_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InputOTP = InputOTP;
    exports.InputOTPGroup = InputOTPGroup;
    exports.InputOTPSlot = InputOTPSlot;
    exports.InputOTPSeparator = InputOTPSeparator;
    function InputOTP({ className, containerClassName, ...props }) {
        return ((0, jsx_runtime_1.jsx)(input_otp_1.OTPInput, { "data-slot": "input-otp", containerClassName: (0, utils_1.cn)("flex items-center gap-2 has-disabled:opacity-50", containerClassName), className: (0, utils_1.cn)("disabled:cursor-not-allowed", className), ...props }));
    }
    function InputOTPGroup({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("div", { "data-slot": "input-otp-group", className: (0, utils_1.cn)("flex items-center", className), ...props }));
    }
    function InputOTPSlot({ index, className, ...props }) {
        const inputOTPContext = React.useContext(input_otp_1.OTPInputContext);
        const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index];
        return ((0, jsx_runtime_1.jsxs)("div", { "data-slot": "input-otp-slot", "data-active": isActive, className: (0, utils_1.cn)("border-input data-[active=true]:border-ring data-[active=true]:ring-ring/50 data-[active=true]:aria-invalid:ring-destructive/20 dark:data-[active=true]:aria-invalid:ring-destructive/40 aria-invalid:border-destructive data-[active=true]:aria-invalid:border-destructive relative flex h-9 w-9 items-center justify-center border-y border-r text-sm shadow-xs transition-all outline-none first:rounded-l-md first:border-l last:rounded-r-md data-[active=true]:z-10 data-[active=true]:ring-[3px]", className), ...props, children: [char, hasFakeCaret && ((0, jsx_runtime_1.jsx)("div", { className: "pointer-events-none absolute inset-0 flex items-center justify-center", children: (0, jsx_runtime_1.jsx)("div", { className: "animate-caret-blink bg-foreground h-4 w-px duration-1000" }) }))] }));
    }
    function InputOTPSeparator({ ...props }) {
        return ((0, jsx_runtime_1.jsx)("div", { "data-slot": "input-otp-separator", role: "separator", ...props, children: (0, jsx_runtime_1.jsx)(lucide_react_1.MinusIcon, {}) }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtb3RwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdWkvaW5wdXQtb3RwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQUEsWUFBWSxDQUFDOzs7SUE0RUosNEJBQVE7SUFBRSxzQ0FBYTtJQUFFLG9DQUFZO0lBQUUsOENBQWlCO0lBcEVqRSxTQUFTLFFBQVEsQ0FBQyxFQUNoQixTQUFTLEVBQ1Qsa0JBQWtCLEVBQ2xCLEdBQUcsS0FBSyxFQUdUO1FBQ0MsT0FBTyxDQUNMLHVCQUFDLG9CQUFRLGlCQUNHLFdBQVcsRUFDckIsa0JBQWtCLEVBQUUsSUFBQSxVQUFFLEVBQ3BCLGlEQUFpRCxFQUNqRCxrQkFBa0IsQ0FDbkIsRUFDRCxTQUFTLEVBQUUsSUFBQSxVQUFFLEVBQUMsNkJBQTZCLEVBQUUsU0FBUyxDQUFDLEtBQ25ELEtBQUssR0FDVCxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsU0FBUyxhQUFhLENBQUMsRUFBRSxTQUFTLEVBQUUsR0FBRyxLQUFLLEVBQStCO1FBQ3pFLE9BQU8sQ0FDTCw2Q0FDWSxpQkFBaUIsRUFDM0IsU0FBUyxFQUFFLElBQUEsVUFBRSxFQUFDLG1CQUFtQixFQUFFLFNBQVMsQ0FBQyxLQUN6QyxLQUFLLEdBQ1QsQ0FDSCxDQUFDO0lBQ0osQ0FBQztJQUVELFNBQVMsWUFBWSxDQUFDLEVBQ3BCLEtBQUssRUFDTCxTQUFTLEVBQ1QsR0FBRyxLQUFLLEVBR1Q7UUFDQyxNQUFNLGVBQWUsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDLDJCQUFlLENBQUMsQ0FBQztRQUMxRCxNQUFNLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsR0FBRyxlQUFlLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRXRFLE9BQU8sQ0FDTCw4Q0FDWSxnQkFBZ0IsaUJBQ2IsUUFBUSxFQUNyQixTQUFTLEVBQUUsSUFBQSxVQUFFLEVBQ1gseWVBQXllLEVBQ3plLFNBQVMsQ0FDVixLQUNHLEtBQUssYUFFUixJQUFJLEVBQ0osWUFBWSxJQUFJLENBQ2YsZ0NBQUssU0FBUyxFQUFDLHVFQUF1RSxZQUNwRixnQ0FBSyxTQUFTLEVBQUMsMERBQTBELEdBQUcsR0FDeEUsQ0FDUCxJQUNHLENBQ1AsQ0FBQztJQUNKLENBQUM7SUFFRCxTQUFTLGlCQUFpQixDQUFDLEVBQUUsR0FBRyxLQUFLLEVBQStCO1FBQ2xFLE9BQU8sQ0FDTCw2Q0FBZSxxQkFBcUIsRUFBQyxJQUFJLEVBQUMsV0FBVyxLQUFLLEtBQUssWUFDN0QsdUJBQUMsd0JBQVMsS0FBRyxHQUNULENBQ1AsQ0FBQztJQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBPVFBJbnB1dCwgT1RQSW5wdXRDb250ZXh0IH0gZnJvbSBcImlucHV0LW90cFwiO1xuaW1wb3J0IHsgTWludXNJY29uIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiO1xuXG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiO1xuXG5mdW5jdGlvbiBJbnB1dE9UUCh7XG4gIGNsYXNzTmFtZSxcbiAgY29udGFpbmVyQ2xhc3NOYW1lLFxuICAuLi5wcm9wc1xufTogUmVhY3QuQ29tcG9uZW50UHJvcHM8dHlwZW9mIE9UUElucHV0PiAmIHtcbiAgY29udGFpbmVyQ2xhc3NOYW1lPzogc3RyaW5nO1xufSkge1xuICByZXR1cm4gKFxuICAgIDxPVFBJbnB1dFxuICAgICAgZGF0YS1zbG90PVwiaW5wdXQtb3RwXCJcbiAgICAgIGNvbnRhaW5lckNsYXNzTmFtZT17Y24oXG4gICAgICAgIFwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTIgaGFzLWRpc2FibGVkOm9wYWNpdHktNTBcIixcbiAgICAgICAgY29udGFpbmVyQ2xhc3NOYW1lLFxuICAgICAgKX1cbiAgICAgIGNsYXNzTmFtZT17Y24oXCJkaXNhYmxlZDpjdXJzb3Itbm90LWFsbG93ZWRcIiwgY2xhc3NOYW1lKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICAvPlxuICApO1xufVxuXG5mdW5jdGlvbiBJbnB1dE9UUEdyb3VwKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9OiBSZWFjdC5Db21wb25lbnRQcm9wczxcImRpdlwiPikge1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGRhdGEtc2xvdD1cImlucHV0LW90cC1ncm91cFwiXG4gICAgICBjbGFzc05hbWU9e2NuKFwiZmxleCBpdGVtcy1jZW50ZXJcIiwgY2xhc3NOYW1lKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICAvPlxuICApO1xufVxuXG5mdW5jdGlvbiBJbnB1dE9UUFNsb3Qoe1xuICBpbmRleCxcbiAgY2xhc3NOYW1lLFxuICAuLi5wcm9wc1xufTogUmVhY3QuQ29tcG9uZW50UHJvcHM8XCJkaXZcIj4gJiB7XG4gIGluZGV4OiBudW1iZXI7XG59KSB7XG4gIGNvbnN0IGlucHV0T1RQQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoT1RQSW5wdXRDb250ZXh0KTtcbiAgY29uc3QgeyBjaGFyLCBoYXNGYWtlQ2FyZXQsIGlzQWN0aXZlIH0gPSBpbnB1dE9UUENvbnRleHQuc2xvdHNbaW5kZXhdO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgZGF0YS1zbG90PVwiaW5wdXQtb3RwLXNsb3RcIlxuICAgICAgZGF0YS1hY3RpdmU9e2lzQWN0aXZlfVxuICAgICAgY2xhc3NOYW1lPXtjbihcbiAgICAgICAgXCJib3JkZXItaW5wdXQgZGF0YS1bYWN0aXZlPXRydWVdOmJvcmRlci1yaW5nIGRhdGEtW2FjdGl2ZT10cnVlXTpyaW5nLXJpbmcvNTAgZGF0YS1bYWN0aXZlPXRydWVdOmFyaWEtaW52YWxpZDpyaW5nLWRlc3RydWN0aXZlLzIwIGRhcms6ZGF0YS1bYWN0aXZlPXRydWVdOmFyaWEtaW52YWxpZDpyaW5nLWRlc3RydWN0aXZlLzQwIGFyaWEtaW52YWxpZDpib3JkZXItZGVzdHJ1Y3RpdmUgZGF0YS1bYWN0aXZlPXRydWVdOmFyaWEtaW52YWxpZDpib3JkZXItZGVzdHJ1Y3RpdmUgcmVsYXRpdmUgZmxleCBoLTkgdy05IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBib3JkZXIteSBib3JkZXItciB0ZXh0LXNtIHNoYWRvdy14cyB0cmFuc2l0aW9uLWFsbCBvdXRsaW5lLW5vbmUgZmlyc3Q6cm91bmRlZC1sLW1kIGZpcnN0OmJvcmRlci1sIGxhc3Q6cm91bmRlZC1yLW1kIGRhdGEtW2FjdGl2ZT10cnVlXTp6LTEwIGRhdGEtW2FjdGl2ZT10cnVlXTpyaW5nLVszcHhdXCIsXG4gICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICl9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgPlxuICAgICAge2NoYXJ9XG4gICAgICB7aGFzRmFrZUNhcmV0ICYmIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb2ludGVyLWV2ZW50cy1ub25lIGFic29sdXRlIGluc2V0LTAgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFuaW1hdGUtY2FyZXQtYmxpbmsgYmctZm9yZWdyb3VuZCBoLTQgdy1weCBkdXJhdGlvbi0xMDAwXCIgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICApO1xufVxuXG5mdW5jdGlvbiBJbnB1dE9UUFNlcGFyYXRvcih7IC4uLnByb3BzIH06IFJlYWN0LkNvbXBvbmVudFByb3BzPFwiZGl2XCI+KSB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBkYXRhLXNsb3Q9XCJpbnB1dC1vdHAtc2VwYXJhdG9yXCIgcm9sZT1cInNlcGFyYXRvclwiIHsuLi5wcm9wc30+XG4gICAgICA8TWludXNJY29uIC8+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmV4cG9ydCB7IElucHV0T1RQLCBJbnB1dE9UUEdyb3VwLCBJbnB1dE9UUFNsb3QsIElucHV0T1RQU2VwYXJhdG9yIH07XG4iXX0=