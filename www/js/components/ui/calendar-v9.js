define(["require", "exports", "react/jsx-runtime", "react", "react-day-picker", "../../lib/utils", "./button", "./scroll-area", "./select"], function (require, exports, jsx_runtime_1, React, react_day_picker_1, utils_1, button_1, scroll_area_1, select_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NO_BORDER = void 0;
    exports.Calendar = Calendar;
    exports.NO_BORDER = "ring-0 focus:ring-0 focus-visible:ring-0 shadow-none focus:shadow-none focus-visible:shadow-none outline-none focus:outline-none focus-visible:outline-none border-none focus:border-none focus-visible:border-none";
    // Updated for react-day-picker v9 and mobile sizing
    function Calendar({ numberOfMonths = 1, showOutsideDays = true, compact = false, captionLayout = "dropdown", className = "w-fit", classNames, ...props }) {
        // Custom components for prev/next and date dropdowns
        const components = React.useMemo(() => {
            const pnc = compact
                ? "focus:underline focus:underline-offset-2 -mx-0.5 sm:mx-0"
                : "focus:underline focus:underline-offset-2 mx-0";
            const customComponents = {
                PreviousMonthButton: ({ tabIndex, className, ...props }) => ((0, jsx_runtime_1.jsx)(react_day_picker_1.PreviousMonthButton, { tabIndex: 0, className: (0, utils_1.cn)(className, pnc), ...props })),
                NextMonthButton: ({ tabIndex, className, ...props }) => ((0, jsx_runtime_1.jsx)(react_day_picker_1.NextMonthButton, { tabIndex: 0, className: (0, utils_1.cn)(className, pnc), ...props })),
                Dropdown: ({ value, options, onChange }) => {
                    const selected = options === null || options === void 0 ? void 0 : options.find((option) => option.value === value);
                    const handleChange = (value) => onChange === null || onChange === void 0 ? void 0 : onChange({ target: { value } });
                    return ((0, jsx_runtime_1.jsxs)(select_1.Select, { value: value === null || value === void 0 ? void 0 : value.toString(), onValueChange: handleChange, children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, { tabIndex: 0, className: (0, utils_1.cn)(exports.NO_BORDER, compact
                                    ? "-mr-2.5 sm:-mr-2.5 [&>svg]:-ml-[1px]"
                                    : "-mr-2.5 text-md", "focus:underline focus:underline-offset-2 h-7 pr-0 [&>svg]:opacity-15"), children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, { children: selected === null || selected === void 0 ? void 0 : selected.label }) }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, { position: "popper", children: (0, jsx_runtime_1.jsx)(scroll_area_1.ScrollArea, { className: "h-56", children: options === null || options === void 0 ? void 0 : options.map(({ value: v, label }, i) => {
                                        var _a;
                                        return ((0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: (_a = v === null || v === void 0 ? void 0 : v.toString()) !== null && _a !== void 0 ? _a : "", children: label }, `${v}-${i}`));
                                    }) }) })] }));
                },
            };
            return props.components
                ? {
                    ...customComponents,
                    ...props.components,
                }
                : customComponents;
        }, [compact, props.components]);
        const prevNextButtonSize = compact ? "h-5 w-5" : "h-6 w-6";
        return ((0, jsx_runtime_1.jsx)(react_day_picker_1.DayPicker, { mode: props.mode || "single", captionLayout: captionLayout, numberOfMonths: numberOfMonths, showOutsideDays: showOutsideDays, components: components, className: className, classNames: {
                months: "flex gap-4 relative",
                month_grid: compact ? undefined : "mt-2",
                month_caption: (0, utils_1.cn)("flex relative items-center font-medium", compact ? "text-sm mt-1" : "text-md mt-0.5", captionLayout === "label" ? "ml-1 mb-2" : "-ml-2 mb-1 mt-0"),
                dropdowns: "flex",
                years_dropdown: "after:none",
                nav: "absolute right-0 z-50 flex items-center h-7",
                button_previous: (0, utils_1.cn)(exports.NO_BORDER, prevNextButtonSize, "group"),
                button_next: (0, utils_1.cn)(exports.NO_BORDER, prevNextButtonSize, "group"),
                chevron: (0, utils_1.cn)("border-b border-transparent group-focus:border-current", prevNextButtonSize),
                weeks: "w-full border-collapse space-y-1",
                week: "flex w-full mt-2",
                weekdays: "flex",
                weekday: (0, utils_1.cn)("text-muted-foreground rounded-md font-normal", compact ? "w-6 sm:w-7 text-xs sm:text-sm" : "w-8 text-sm"),
                day: (0, utils_1.cn)("relative p-0 focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].outside)]:bg-accent/50", props.mode === "range"
                    ? "[&.range-end]:rounded-r-md [&.range-start]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md"
                    : "rounded-md"),
                day_button: (0, utils_1.cn)((0, button_1.buttonVariants)({ variant: "ghost" }), "[&:hover]:bg-transparent [&:hover]:text-inherit", // Disable the ghost button hover
                compact
                    ? "h-6 w-6 sm:h-7 sm:w-7 p-0 text-xs sm:text-sm"
                    : "h-8 w-8 p-0.5 text-sm", "text-center font-normal"),
                range_start: "range-start",
                range_end: "range-end",
                selected: "bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground",
                today: "bg-accent text-accent-foreground",
                outside: "outside text-muted-foreground opacity-50  aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30",
                disabled: "text-muted-foreground opacity-50",
                range_middle: "aria-selected:bg-accent aria-selected:text-accent-foreground",
                hidden: "invisible",
                ...classNames,
            }, ...props }));
    }
    Calendar.displayName = "Calendar";
});
//# sourceMappingURL=data:application/json;base64,