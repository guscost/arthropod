define(["require", "exports", "react/jsx-runtime", "react-day-picker", "../../lib/utils", "./button", "./scroll-area", "./select"], function (require, exports, jsx_runtime_1, react_day_picker_1, utils_1, button_1, scroll_area_1, select_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NO_BORDER = void 0;
    exports.Calendar = Calendar;
    exports.NO_BORDER = "ring-0 focus:ring-0 focus-visible:ring-0 shadow-none focus:shadow-none focus-visible:shadow-none outline-none focus:outline-none focus-visible:outline-none border-none focus:border-none focus-visible:border-none";
    const CUSTOM_COMPONENTS = {
        PreviousMonthButton: ({ tabIndex, className, ...props }) => {
            return ((0, jsx_runtime_1.jsx)(react_day_picker_1.PreviousMonthButton, { tabIndex: 0, className: (0, utils_1.cn)(className, "focus:underline focus:underline-offset-2"), ...props }));
        },
        NextMonthButton: ({ tabIndex, className, ...props }) => {
            return ((0, jsx_runtime_1.jsx)(react_day_picker_1.NextMonthButton, { tabIndex: 0, className: (0, utils_1.cn)(className, "focus:underline focus:underline-offset-2"), ...props }));
        },
        Dropdown: ({ value, options, onChange, ...props }) => {
            const selected = options === null || options === void 0 ? void 0 : options.find((option) => option.value === value);
            const handleChange = (value) => {
                const changeEvent = {
                    target: { value },
                };
                onChange === null || onChange === void 0 ? void 0 : onChange(changeEvent);
            };
            return ((0, jsx_runtime_1.jsxs)(select_1.Select, { value: value === null || value === void 0 ? void 0 : value.toString(), onValueChange: (value) => {
                    handleChange(value);
                }, children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, { tabIndex: 0, className: (0, utils_1.cn)(exports.NO_BORDER, "focus:underline focus:underline-offset-2 pr-0 -mr-3 sm:-mr-2.5 h-7 [&>svg]:opacity-25 [&>svg]:-ml-0.5"), children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, { children: selected === null || selected === void 0 ? void 0 : selected.label }) }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, { position: "popper", children: (0, jsx_runtime_1.jsx)(scroll_area_1.ScrollArea, { className: "h-80", children: options === null || options === void 0 ? void 0 : options.map((option, id) => {
                                var _a, _b;
                                return ((0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: (_b = (_a = option.value) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : "", children: option.label }, `${option.value}-${id}`));
                            }) }) })] }));
        },
    };
    // shadcn calendar is updated for react-day-picker v9 and mobile sizing
    function Calendar({ numberOfMonths = 1, showOutsideDays = true, captionLayout = "dropdown", className = "w-fit", classNames, components, ...props }) {
        return ((0, jsx_runtime_1.jsx)(react_day_picker_1.DayPicker, { mode: props.mode || "single", captionLayout: captionLayout, numberOfMonths: numberOfMonths, showOutsideDays: showOutsideDays, className: className, classNames: {
                months: "flex gap-4 relative",
                month_caption: "flex -mx-3 mb-2 relative items-center text-sm font-medium",
                dropdowns: "flex",
                years_dropdown: "after:none",
                nav: "absolute right-0 z-50 -mr-1 sm:mr-0 flex items-center h-7",
                button_previous: (0, utils_1.cn)(exports.NO_BORDER, "group h-5 w-5 sm:h-6 sm:w-6"),
                button_next: (0, utils_1.cn)(exports.NO_BORDER, "group h-5 w-5 sm:h-6 sm:w-6"),
                chevron: "border-b border-transparent group-focus:border-current h-5 w-5 sm:h-6 sm:w-6",
                weeks: "w-full border-collapse space-y-1",
                week: "flex w-full mt-2",
                weekdays: "flex",
                weekday: "text-muted-foreground rounded-md w-6 sm:w-7 text-xs sm:text-sm font-normal text-[0.8rem]",
                day: (0, utils_1.cn)("relative p-0 focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].outside)]:bg-accent/50", props.mode === "range"
                    ? "[&.range-end]:rounded-r-md [&.range-start]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md"
                    : "rounded-md"),
                day_button: (0, utils_1.cn)((0, button_1.buttonVariants)({ variant: "ghost" }), "[&:hover]:bg-transparent [&:hover]:text-inherit", // Disable the ghost button hover
                "h-6 w-6 sm:h-7 sm:w-7 p-0 text-xs sm:text-sm text-center font-normal"),
                range_start: "range-start",
                range_end: "range-end",
                selected: "bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground",
                today: "bg-accent text-accent-foreground",
                outside: "outside text-muted-foreground opacity-50  aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30",
                disabled: "text-muted-foreground opacity-50",
                range_middle: "aria-selected:bg-accent aria-selected:text-accent-foreground",
                hidden: "invisible",
                ...classNames,
            }, components: components
                ? {
                    ...CUSTOM_COMPONENTS,
                    ...components,
                }
                : CUSTOM_COMPONENTS, ...props }));
    }
    Calendar.displayName = "Calendar";
});
//# sourceMappingURL=data:application/json;base64,