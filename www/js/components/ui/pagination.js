define(["require", "exports", "react/jsx-runtime", "react", "lucide-react", "@/lib/utils", "@/components/ui/button"], function (require, exports, jsx_runtime_1, React, lucide_react_1, utils_1, button_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PaginationEllipsis = exports.PaginationNext = exports.PaginationPrevious = exports.PaginationItem = exports.PaginationLink = exports.PaginationContent = exports.Pagination = void 0;
    const Pagination = ({ className, ...props }) => ((0, jsx_runtime_1.jsx)("nav", { role: "navigation", "aria-label": "pagination", className: (0, utils_1.cn)("mx-auto flex w-full justify-center", className), ...props }));
    exports.Pagination = Pagination;
    Pagination.displayName = "Pagination";
    const PaginationContent = React.forwardRef(({ className, ...props }, ref) => ((0, jsx_runtime_1.jsx)("ul", { ref: ref, className: (0, utils_1.cn)("flex flex-row items-center gap-1", className), ...props })));
    exports.PaginationContent = PaginationContent;
    PaginationContent.displayName = "PaginationContent";
    const PaginationItem = React.forwardRef(({ className, ...props }, ref) => ((0, jsx_runtime_1.jsx)("li", { ref: ref, className: (0, utils_1.cn)("", className), ...props })));
    exports.PaginationItem = PaginationItem;
    PaginationItem.displayName = "PaginationItem";
    const PaginationLink = ({ className, isActive, size = "icon", ...props }) => ((0, jsx_runtime_1.jsx)("a", { "aria-current": isActive ? "page" : undefined, className: (0, utils_1.cn)((0, button_1.buttonVariants)({
            variant: isActive ? "outline" : "ghost",
            size,
        }), className), ...props }));
    exports.PaginationLink = PaginationLink;
    PaginationLink.displayName = "PaginationLink";
    const PaginationPrevious = ({ className, ...props }) => ((0, jsx_runtime_1.jsxs)(PaginationLink, { "aria-label": "Go to previous page", size: "default", className: (0, utils_1.cn)("gap-1 pl-2.5", className), ...props, children: [(0, jsx_runtime_1.jsx)(lucide_react_1.ChevronLeft, { className: "h-4 w-4" }), (0, jsx_runtime_1.jsx)("span", { children: "Previous" })] }));
    exports.PaginationPrevious = PaginationPrevious;
    PaginationPrevious.displayName = "PaginationPrevious";
    const PaginationNext = ({ className, ...props }) => ((0, jsx_runtime_1.jsxs)(PaginationLink, { "aria-label": "Go to next page", size: "default", className: (0, utils_1.cn)("gap-1 pr-2.5", className), ...props, children: [(0, jsx_runtime_1.jsx)("span", { children: "Next" }), (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronRight, { className: "h-4 w-4" })] }));
    exports.PaginationNext = PaginationNext;
    PaginationNext.displayName = "PaginationNext";
    const PaginationEllipsis = ({ className, ...props }) => ((0, jsx_runtime_1.jsxs)("span", { "aria-hidden": true, className: (0, utils_1.cn)("flex h-9 w-9 items-center justify-center", className), ...props, children: [(0, jsx_runtime_1.jsx)(lucide_react_1.MoreHorizontal, { className: "h-4 w-4" }), (0, jsx_runtime_1.jsx)("span", { className: "sr-only", children: "More pages" })] }));
    exports.PaginationEllipsis = PaginationEllipsis;
    PaginationEllipsis.displayName = "PaginationEllipsis";
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3VpL3BhZ2luYXRpb24udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7SUFNQSxNQUFNLFVBQVUsR0FBRyxDQUFDLEVBQUUsU0FBUyxFQUFFLEdBQUcsS0FBSyxFQUErQixFQUFFLEVBQUUsQ0FBQyxDQUMzRSxnQ0FDRSxJQUFJLEVBQUMsWUFBWSxnQkFDTixZQUFZLEVBQ3ZCLFNBQVMsRUFBRSxJQUFBLFVBQUUsRUFBQyxvQ0FBb0MsRUFBRSxTQUFTLENBQUMsS0FDMUQsS0FBSyxHQUNULENBQ0gsQ0FBQztJQWdHQSxnQ0FBVTtJQS9GWixVQUFVLENBQUMsV0FBVyxHQUFHLFlBQVksQ0FBQztJQUV0QyxNQUFNLGlCQUFpQixHQUFHLEtBQUssQ0FBQyxVQUFVLENBR3hDLENBQUMsRUFBRSxTQUFTLEVBQUUsR0FBRyxLQUFLLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQ2xDLCtCQUNFLEdBQUcsRUFBRSxHQUFHLEVBQ1IsU0FBUyxFQUFFLElBQUEsVUFBRSxFQUFDLGtDQUFrQyxFQUFFLFNBQVMsQ0FBQyxLQUN4RCxLQUFLLEdBQ1QsQ0FDSCxDQUFDLENBQUM7SUFxRkQsOENBQWlCO0lBcEZuQixpQkFBaUIsQ0FBQyxXQUFXLEdBQUcsbUJBQW1CLENBQUM7SUFFcEQsTUFBTSxjQUFjLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FHckMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxHQUFHLEtBQUssRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FDbEMsK0JBQUksR0FBRyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsSUFBQSxVQUFFLEVBQUMsRUFBRSxFQUFFLFNBQVMsQ0FBQyxLQUFNLEtBQUssR0FBSSxDQUMxRCxDQUFDLENBQUM7SUErRUQsd0NBQWM7SUE5RWhCLGNBQWMsQ0FBQyxXQUFXLEdBQUcsZ0JBQWdCLENBQUM7SUFPOUMsTUFBTSxjQUFjLEdBQUcsQ0FBQyxFQUN0QixTQUFTLEVBQ1QsUUFBUSxFQUNSLElBQUksR0FBRyxNQUFNLEVBQ2IsR0FBRyxLQUFLLEVBQ1ksRUFBRSxFQUFFLENBQUMsQ0FDekIsOENBQ2dCLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQzNDLFNBQVMsRUFBRSxJQUFBLFVBQUUsRUFDWCxJQUFBLHVCQUFjLEVBQUM7WUFDYixPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLE9BQU87WUFDdkMsSUFBSTtTQUNMLENBQUMsRUFDRixTQUFTLENBQ1YsS0FDRyxLQUFLLEdBQ1QsQ0FDSCxDQUFDO0lBcURBLHdDQUFjO0lBcERoQixjQUFjLENBQUMsV0FBVyxHQUFHLGdCQUFnQixDQUFDO0lBRTlDLE1BQU0sa0JBQWtCLEdBQUcsQ0FBQyxFQUMxQixTQUFTLEVBQ1QsR0FBRyxLQUFLLEVBQ29DLEVBQUUsRUFBRSxDQUFDLENBQ2pELHdCQUFDLGNBQWMsa0JBQ0YscUJBQXFCLEVBQ2hDLElBQUksRUFBQyxTQUFTLEVBQ2QsU0FBUyxFQUFFLElBQUEsVUFBRSxFQUFDLGNBQWMsRUFBRSxTQUFTLENBQUMsS0FDcEMsS0FBSyxhQUVULHVCQUFDLDBCQUFXLElBQUMsU0FBUyxFQUFDLFNBQVMsR0FBRyxFQUNuQyx3REFBcUIsSUFDTixDQUNsQixDQUFDO0lBdUNBLGdEQUFrQjtJQXRDcEIsa0JBQWtCLENBQUMsV0FBVyxHQUFHLG9CQUFvQixDQUFDO0lBRXRELE1BQU0sY0FBYyxHQUFHLENBQUMsRUFDdEIsU0FBUyxFQUNULEdBQUcsS0FBSyxFQUNvQyxFQUFFLEVBQUUsQ0FBQyxDQUNqRCx3QkFBQyxjQUFjLGtCQUNGLGlCQUFpQixFQUM1QixJQUFJLEVBQUMsU0FBUyxFQUNkLFNBQVMsRUFBRSxJQUFBLFVBQUUsRUFBQyxjQUFjLEVBQUUsU0FBUyxDQUFDLEtBQ3BDLEtBQUssYUFFVCxvREFBaUIsRUFDakIsdUJBQUMsMkJBQVksSUFBQyxTQUFTLEVBQUMsU0FBUyxHQUFHLElBQ3JCLENBQ2xCLENBQUM7SUF3QkEsd0NBQWM7SUF2QmhCLGNBQWMsQ0FBQyxXQUFXLEdBQUcsZ0JBQWdCLENBQUM7SUFFOUMsTUFBTSxrQkFBa0IsR0FBRyxDQUFDLEVBQzFCLFNBQVMsRUFDVCxHQUFHLEtBQUssRUFDcUIsRUFBRSxFQUFFLENBQUMsQ0FDbEMsdURBRUUsU0FBUyxFQUFFLElBQUEsVUFBRSxFQUFDLDBDQUEwQyxFQUFFLFNBQVMsQ0FBQyxLQUNoRSxLQUFLLGFBRVQsdUJBQUMsNkJBQWMsSUFBQyxTQUFTLEVBQUMsU0FBUyxHQUFHLEVBQ3RDLGlDQUFNLFNBQVMsRUFBQyxTQUFTLDJCQUFrQixJQUN0QyxDQUNSLENBQUM7SUFVQSxnREFBa0I7SUFUcEIsa0JBQWtCLENBQUMsV0FBVyxHQUFHLG9CQUFvQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBDaGV2cm9uTGVmdCwgQ2hldnJvblJpZ2h0LCBNb3JlSG9yaXpvbnRhbCB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcblxuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIjtcbmltcG9ydCB7IEJ1dHRvblByb3BzLCBidXR0b25WYXJpYW50cyB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvYnV0dG9uXCI7XG5cbmNvbnN0IFBhZ2luYXRpb24gPSAoeyBjbGFzc05hbWUsIC4uLnByb3BzIH06IFJlYWN0LkNvbXBvbmVudFByb3BzPFwibmF2XCI+KSA9PiAoXG4gIDxuYXZcbiAgICByb2xlPVwibmF2aWdhdGlvblwiXG4gICAgYXJpYS1sYWJlbD1cInBhZ2luYXRpb25cIlxuICAgIGNsYXNzTmFtZT17Y24oXCJteC1hdXRvIGZsZXggdy1mdWxsIGp1c3RpZnktY2VudGVyXCIsIGNsYXNzTmFtZSl9XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblBhZ2luYXRpb24uZGlzcGxheU5hbWUgPSBcIlBhZ2luYXRpb25cIjtcblxuY29uc3QgUGFnaW5hdGlvbkNvbnRlbnQgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBIVE1MVUxpc3RFbGVtZW50LFxuICBSZWFjdC5Db21wb25lbnRQcm9wczxcInVsXCI+XG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gIDx1bFxuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y24oXCJmbGV4IGZsZXgtcm93IGl0ZW1zLWNlbnRlciBnYXAtMVwiLCBjbGFzc05hbWUpfVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbikpO1xuUGFnaW5hdGlvbkNvbnRlbnQuZGlzcGxheU5hbWUgPSBcIlBhZ2luYXRpb25Db250ZW50XCI7XG5cbmNvbnN0IFBhZ2luYXRpb25JdGVtID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgSFRNTExJRWxlbWVudCxcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHM8XCJsaVwiPlxuPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxuICA8bGkgcmVmPXtyZWZ9IGNsYXNzTmFtZT17Y24oXCJcIiwgY2xhc3NOYW1lKX0gey4uLnByb3BzfSAvPlxuKSk7XG5QYWdpbmF0aW9uSXRlbS5kaXNwbGF5TmFtZSA9IFwiUGFnaW5hdGlvbkl0ZW1cIjtcblxudHlwZSBQYWdpbmF0aW9uTGlua1Byb3BzID0ge1xuICBpc0FjdGl2ZT86IGJvb2xlYW47XG59ICYgUGljazxCdXR0b25Qcm9wcywgXCJzaXplXCI+ICZcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHM8XCJhXCI+O1xuXG5jb25zdCBQYWdpbmF0aW9uTGluayA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgaXNBY3RpdmUsXG4gIHNpemUgPSBcImljb25cIixcbiAgLi4ucHJvcHNcbn06IFBhZ2luYXRpb25MaW5rUHJvcHMpID0+IChcbiAgPGFcbiAgICBhcmlhLWN1cnJlbnQ9e2lzQWN0aXZlID8gXCJwYWdlXCIgOiB1bmRlZmluZWR9XG4gICAgY2xhc3NOYW1lPXtjbihcbiAgICAgIGJ1dHRvblZhcmlhbnRzKHtcbiAgICAgICAgdmFyaWFudDogaXNBY3RpdmUgPyBcIm91dGxpbmVcIiA6IFwiZ2hvc3RcIixcbiAgICAgICAgc2l6ZSxcbiAgICAgIH0pLFxuICAgICAgY2xhc3NOYW1lLFxuICAgICl9XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblBhZ2luYXRpb25MaW5rLmRpc3BsYXlOYW1lID0gXCJQYWdpbmF0aW9uTGlua1wiO1xuXG5jb25zdCBQYWdpbmF0aW9uUHJldmlvdXMgPSAoe1xuICBjbGFzc05hbWUsXG4gIC4uLnByb3BzXG59OiBSZWFjdC5Db21wb25lbnRQcm9wczx0eXBlb2YgUGFnaW5hdGlvbkxpbms+KSA9PiAoXG4gIDxQYWdpbmF0aW9uTGlua1xuICAgIGFyaWEtbGFiZWw9XCJHbyB0byBwcmV2aW91cyBwYWdlXCJcbiAgICBzaXplPVwiZGVmYXVsdFwiXG4gICAgY2xhc3NOYW1lPXtjbihcImdhcC0xIHBsLTIuNVwiLCBjbGFzc05hbWUpfVxuICAgIHsuLi5wcm9wc31cbiAgPlxuICAgIDxDaGV2cm9uTGVmdCBjbGFzc05hbWU9XCJoLTQgdy00XCIgLz5cbiAgICA8c3Bhbj5QcmV2aW91czwvc3Bhbj5cbiAgPC9QYWdpbmF0aW9uTGluaz5cbik7XG5QYWdpbmF0aW9uUHJldmlvdXMuZGlzcGxheU5hbWUgPSBcIlBhZ2luYXRpb25QcmV2aW91c1wiO1xuXG5jb25zdCBQYWdpbmF0aW9uTmV4dCA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgLi4ucHJvcHNcbn06IFJlYWN0LkNvbXBvbmVudFByb3BzPHR5cGVvZiBQYWdpbmF0aW9uTGluaz4pID0+IChcbiAgPFBhZ2luYXRpb25MaW5rXG4gICAgYXJpYS1sYWJlbD1cIkdvIHRvIG5leHQgcGFnZVwiXG4gICAgc2l6ZT1cImRlZmF1bHRcIlxuICAgIGNsYXNzTmFtZT17Y24oXCJnYXAtMSBwci0yLjVcIiwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gID5cbiAgICA8c3Bhbj5OZXh0PC9zcGFuPlxuICAgIDxDaGV2cm9uUmlnaHQgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XG4gIDwvUGFnaW5hdGlvbkxpbms+XG4pO1xuUGFnaW5hdGlvbk5leHQuZGlzcGxheU5hbWUgPSBcIlBhZ2luYXRpb25OZXh0XCI7XG5cbmNvbnN0IFBhZ2luYXRpb25FbGxpcHNpcyA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgLi4ucHJvcHNcbn06IFJlYWN0LkNvbXBvbmVudFByb3BzPFwic3BhblwiPikgPT4gKFxuICA8c3BhblxuICAgIGFyaWEtaGlkZGVuXG4gICAgY2xhc3NOYW1lPXtjbihcImZsZXggaC05IHctOSBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIiwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gID5cbiAgICA8TW9yZUhvcml6b250YWwgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XG4gICAgPHNwYW4gY2xhc3NOYW1lPVwic3Itb25seVwiPk1vcmUgcGFnZXM8L3NwYW4+XG4gIDwvc3Bhbj5cbik7XG5QYWdpbmF0aW9uRWxsaXBzaXMuZGlzcGxheU5hbWUgPSBcIlBhZ2luYXRpb25FbGxpcHNpc1wiO1xuXG5leHBvcnQge1xuICBQYWdpbmF0aW9uLFxuICBQYWdpbmF0aW9uQ29udGVudCxcbiAgUGFnaW5hdGlvbkxpbmssXG4gIFBhZ2luYXRpb25JdGVtLFxuICBQYWdpbmF0aW9uUHJldmlvdXMsXG4gIFBhZ2luYXRpb25OZXh0LFxuICBQYWdpbmF0aW9uRWxsaXBzaXMsXG59O1xuIl19