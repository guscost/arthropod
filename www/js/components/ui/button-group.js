define(["require", "exports", "react/jsx-runtime", "@radix-ui/react-slot", "class-variance-authority", "@/lib/utils", "@/components/ui/separator"], function (require, exports, jsx_runtime_1, react_slot_1, class_variance_authority_1, utils_1, separator_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.buttonGroupVariants = void 0;
    exports.ButtonGroup = ButtonGroup;
    exports.ButtonGroupSeparator = ButtonGroupSeparator;
    exports.ButtonGroupText = ButtonGroupText;
    const buttonGroupVariants = (0, class_variance_authority_1.cva)("flex w-fit items-stretch [&>*]:focus-visible:z-10 [&>*]:focus-visible:relative [&>[data-slot=select-trigger]:not([class*='w-'])]:w-fit [&>input]:flex-1 has-[select[aria-hidden=true]:last-child]:[&>[data-slot=select-trigger]:last-of-type]:rounded-r-md has-[>[data-slot=button-group]]:gap-2", {
        variants: {
            orientation: {
                horizontal: "[&>*:not(:first-child)]:rounded-l-none [&>*:not(:first-child)]:border-l-0 [&>*:not(:last-child)]:rounded-r-none",
                vertical: "flex-col [&>*:not(:first-child)]:rounded-t-none [&>*:not(:first-child)]:border-t-0 [&>*:not(:last-child)]:rounded-b-none",
            },
        },
        defaultVariants: {
            orientation: "horizontal",
        },
    });
    exports.buttonGroupVariants = buttonGroupVariants;
    function ButtonGroup({ className, orientation, ...props }) {
        return ((0, jsx_runtime_1.jsx)("div", { role: "group", "data-slot": "button-group", "data-orientation": orientation, className: (0, utils_1.cn)(buttonGroupVariants({ orientation }), className), ...props }));
    }
    function ButtonGroupText({ className, asChild = false, ...props }) {
        const Comp = asChild ? react_slot_1.Slot : "div";
        return ((0, jsx_runtime_1.jsx)(Comp, { className: (0, utils_1.cn)("bg-muted flex items-center gap-2 rounded-md border px-4 text-sm font-medium shadow-xs [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4", className), ...props }));
    }
    function ButtonGroupSeparator({ className, orientation = "vertical", ...props }) {
        return ((0, jsx_runtime_1.jsx)(separator_1.Separator, { "data-slot": "button-group-separator", orientation: orientation, className: (0, utils_1.cn)("bg-input relative !m-0 self-stretch data-[orientation=vertical]:h-auto", className), ...props }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLWdyb3VwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdWkvYnV0dG9uLWdyb3VwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0lBOEVFLGtDQUFXO0lBQ1gsb0RBQW9CO0lBQ3BCLDBDQUFlO0lBMUVqQixNQUFNLG1CQUFtQixHQUFHLElBQUEsOEJBQUcsRUFDN0Isa1NBQWtTLEVBQ2xTO1FBQ0UsUUFBUSxFQUFFO1lBQ1IsV0FBVyxFQUFFO2dCQUNYLFVBQVUsRUFDUixpSEFBaUg7Z0JBQ25ILFFBQVEsRUFDTiwwSEFBMEg7YUFDN0g7U0FDRjtRQUNELGVBQWUsRUFBRTtZQUNmLFdBQVcsRUFBRSxZQUFZO1NBQzFCO0tBQ0YsQ0FDRixDQUFDO0lBNERBLGtEQUFtQjtJQTFEckIsU0FBUyxXQUFXLENBQUMsRUFDbkIsU0FBUyxFQUNULFdBQVcsRUFDWCxHQUFHLEtBQUssRUFDK0Q7UUFDdkUsT0FBTyxDQUNMLGdDQUNFLElBQUksRUFBQyxPQUFPLGVBQ0YsY0FBYyxzQkFDTixXQUFXLEVBQzdCLFNBQVMsRUFBRSxJQUFBLFVBQUUsRUFBQyxtQkFBbUIsQ0FBQyxFQUFFLFdBQVcsRUFBRSxDQUFDLEVBQUUsU0FBUyxDQUFDLEtBQzFELEtBQUssR0FDVCxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsU0FBUyxlQUFlLENBQUMsRUFDdkIsU0FBUyxFQUNULE9BQU8sR0FBRyxLQUFLLEVBQ2YsR0FBRyxLQUFLLEVBR1Q7UUFDQyxNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLGlCQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUVwQyxPQUFPLENBQ0wsdUJBQUMsSUFBSSxJQUNILFNBQVMsRUFBRSxJQUFBLFVBQUUsRUFDWCx3SkFBd0osRUFDeEosU0FBUyxDQUNWLEtBQ0csS0FBSyxHQUNULENBQ0gsQ0FBQztJQUNKLENBQUM7SUFFRCxTQUFTLG9CQUFvQixDQUFDLEVBQzVCLFNBQVMsRUFDVCxXQUFXLEdBQUcsVUFBVSxFQUN4QixHQUFHLEtBQUssRUFDK0I7UUFDdkMsT0FBTyxDQUNMLHVCQUFDLHFCQUFTLGlCQUNFLHdCQUF3QixFQUNsQyxXQUFXLEVBQUUsV0FBVyxFQUN4QixTQUFTLEVBQUUsSUFBQSxVQUFFLEVBQ1gsd0VBQXdFLEVBQ3hFLFNBQVMsQ0FDVixLQUNHLEtBQUssR0FDVCxDQUNILENBQUM7SUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2xvdCB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3Qtc2xvdFwiO1xuaW1wb3J0IHsgY3ZhLCB0eXBlIFZhcmlhbnRQcm9wcyB9IGZyb20gXCJjbGFzcy12YXJpYW5jZS1hdXRob3JpdHlcIjtcblxuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIjtcbmltcG9ydCB7IFNlcGFyYXRvciB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvc2VwYXJhdG9yXCI7XG5cbmNvbnN0IGJ1dHRvbkdyb3VwVmFyaWFudHMgPSBjdmEoXG4gIFwiZmxleCB3LWZpdCBpdGVtcy1zdHJldGNoIFsmPipdOmZvY3VzLXZpc2libGU6ei0xMCBbJj4qXTpmb2N1cy12aXNpYmxlOnJlbGF0aXZlIFsmPltkYXRhLXNsb3Q9c2VsZWN0LXRyaWdnZXJdOm5vdChbY2xhc3MqPSd3LSddKV06dy1maXQgWyY+aW5wdXRdOmZsZXgtMSBoYXMtW3NlbGVjdFthcmlhLWhpZGRlbj10cnVlXTpsYXN0LWNoaWxkXTpbJj5bZGF0YS1zbG90PXNlbGVjdC10cmlnZ2VyXTpsYXN0LW9mLXR5cGVdOnJvdW5kZWQtci1tZCBoYXMtWz5bZGF0YS1zbG90PWJ1dHRvbi1ncm91cF1dOmdhcC0yXCIsXG4gIHtcbiAgICB2YXJpYW50czoge1xuICAgICAgb3JpZW50YXRpb246IHtcbiAgICAgICAgaG9yaXpvbnRhbDpcbiAgICAgICAgICBcIlsmPio6bm90KDpmaXJzdC1jaGlsZCldOnJvdW5kZWQtbC1ub25lIFsmPio6bm90KDpmaXJzdC1jaGlsZCldOmJvcmRlci1sLTAgWyY+Kjpub3QoOmxhc3QtY2hpbGQpXTpyb3VuZGVkLXItbm9uZVwiLFxuICAgICAgICB2ZXJ0aWNhbDpcbiAgICAgICAgICBcImZsZXgtY29sIFsmPio6bm90KDpmaXJzdC1jaGlsZCldOnJvdW5kZWQtdC1ub25lIFsmPio6bm90KDpmaXJzdC1jaGlsZCldOmJvcmRlci10LTAgWyY+Kjpub3QoOmxhc3QtY2hpbGQpXTpyb3VuZGVkLWItbm9uZVwiLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGRlZmF1bHRWYXJpYW50czoge1xuICAgICAgb3JpZW50YXRpb246IFwiaG9yaXpvbnRhbFwiLFxuICAgIH0sXG4gIH0sXG4pO1xuXG5mdW5jdGlvbiBCdXR0b25Hcm91cCh7XG4gIGNsYXNzTmFtZSxcbiAgb3JpZW50YXRpb24sXG4gIC4uLnByb3BzXG59OiBSZWFjdC5Db21wb25lbnRQcm9wczxcImRpdlwiPiAmIFZhcmlhbnRQcm9wczx0eXBlb2YgYnV0dG9uR3JvdXBWYXJpYW50cz4pIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICByb2xlPVwiZ3JvdXBcIlxuICAgICAgZGF0YS1zbG90PVwiYnV0dG9uLWdyb3VwXCJcbiAgICAgIGRhdGEtb3JpZW50YXRpb249e29yaWVudGF0aW9ufVxuICAgICAgY2xhc3NOYW1lPXtjbihidXR0b25Hcm91cFZhcmlhbnRzKHsgb3JpZW50YXRpb24gfSksIGNsYXNzTmFtZSl9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgLz5cbiAgKTtcbn1cblxuZnVuY3Rpb24gQnV0dG9uR3JvdXBUZXh0KHtcbiAgY2xhc3NOYW1lLFxuICBhc0NoaWxkID0gZmFsc2UsXG4gIC4uLnByb3BzXG59OiBSZWFjdC5Db21wb25lbnRQcm9wczxcImRpdlwiPiAmIHtcbiAgYXNDaGlsZD86IGJvb2xlYW47XG59KSB7XG4gIGNvbnN0IENvbXAgPSBhc0NoaWxkID8gU2xvdCA6IFwiZGl2XCI7XG5cbiAgcmV0dXJuIChcbiAgICA8Q29tcFxuICAgICAgY2xhc3NOYW1lPXtjbihcbiAgICAgICAgXCJiZy1tdXRlZCBmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMiByb3VuZGVkLW1kIGJvcmRlciBweC00IHRleHQtc20gZm9udC1tZWRpdW0gc2hhZG93LXhzIFsmX3N2Z106cG9pbnRlci1ldmVudHMtbm9uZSBbJl9zdmc6bm90KFtjbGFzcyo9J3NpemUtJ10pXTpzaXplLTRcIixcbiAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICAvPlxuICApO1xufVxuXG5mdW5jdGlvbiBCdXR0b25Hcm91cFNlcGFyYXRvcih7XG4gIGNsYXNzTmFtZSxcbiAgb3JpZW50YXRpb24gPSBcInZlcnRpY2FsXCIsXG4gIC4uLnByb3BzXG59OiBSZWFjdC5Db21wb25lbnRQcm9wczx0eXBlb2YgU2VwYXJhdG9yPikge1xuICByZXR1cm4gKFxuICAgIDxTZXBhcmF0b3JcbiAgICAgIGRhdGEtc2xvdD1cImJ1dHRvbi1ncm91cC1zZXBhcmF0b3JcIlxuICAgICAgb3JpZW50YXRpb249e29yaWVudGF0aW9ufVxuICAgICAgY2xhc3NOYW1lPXtjbihcbiAgICAgICAgXCJiZy1pbnB1dCByZWxhdGl2ZSAhbS0wIHNlbGYtc3RyZXRjaCBkYXRhLVtvcmllbnRhdGlvbj12ZXJ0aWNhbF06aC1hdXRvXCIsXG4gICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICl9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgLz5cbiAgKTtcbn1cblxuZXhwb3J0IHtcbiAgQnV0dG9uR3JvdXAsXG4gIEJ1dHRvbkdyb3VwU2VwYXJhdG9yLFxuICBCdXR0b25Hcm91cFRleHQsXG4gIGJ1dHRvbkdyb3VwVmFyaWFudHMsXG59O1xuIl19