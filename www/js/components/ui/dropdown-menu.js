define(["require", "exports", "react/jsx-runtime", "react", "@radix-ui/react-dropdown-menu", "lucide-react", "@/lib/utils"], function (require, exports, jsx_runtime_1, React, DropdownMenuPrimitive, lucide_react_1, utils_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DropdownMenuRadioGroup = exports.DropdownMenuSubTrigger = exports.DropdownMenuSubContent = exports.DropdownMenuSub = exports.DropdownMenuPortal = exports.DropdownMenuGroup = exports.DropdownMenuShortcut = exports.DropdownMenuSeparator = exports.DropdownMenuLabel = exports.DropdownMenuRadioItem = exports.DropdownMenuCheckboxItem = exports.DropdownMenuItem = exports.DropdownMenuContent = exports.DropdownMenuTrigger = exports.DropdownMenu = void 0;
    const DropdownMenu = DropdownMenuPrimitive.Root;
    exports.DropdownMenu = DropdownMenu;
    const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;
    exports.DropdownMenuTrigger = DropdownMenuTrigger;
    const DropdownMenuGroup = DropdownMenuPrimitive.Group;
    exports.DropdownMenuGroup = DropdownMenuGroup;
    const DropdownMenuPortal = DropdownMenuPrimitive.Portal;
    exports.DropdownMenuPortal = DropdownMenuPortal;
    const DropdownMenuSub = DropdownMenuPrimitive.Sub;
    exports.DropdownMenuSub = DropdownMenuSub;
    const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;
    exports.DropdownMenuRadioGroup = DropdownMenuRadioGroup;
    const DropdownMenuSubTrigger = React.forwardRef(({ className, inset, children, ...props }, ref) => ((0, jsx_runtime_1.jsxs)(DropdownMenuPrimitive.SubTrigger, { ref: ref, className: (0, utils_1.cn)("flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0", inset && "pl-8", className), ...props, children: [children, (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronRight, { className: "ml-auto" })] })));
    exports.DropdownMenuSubTrigger = DropdownMenuSubTrigger;
    DropdownMenuSubTrigger.displayName =
        DropdownMenuPrimitive.SubTrigger.displayName;
    const DropdownMenuSubContent = React.forwardRef(({ className, ...props }, ref) => ((0, jsx_runtime_1.jsx)(DropdownMenuPrimitive.SubContent, { ref: ref, className: (0, utils_1.cn)("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]", className), ...props })));
    exports.DropdownMenuSubContent = DropdownMenuSubContent;
    DropdownMenuSubContent.displayName =
        DropdownMenuPrimitive.SubContent.displayName;
    const DropdownMenuContent = React.forwardRef(({ className, sideOffset = 4, ...props }, ref) => ((0, jsx_runtime_1.jsx)(DropdownMenuPrimitive.Portal, { children: (0, jsx_runtime_1.jsx)(DropdownMenuPrimitive.Content, { ref: ref, sideOffset: sideOffset, className: (0, utils_1.cn)("z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md", "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]", className), ...props }) })));
    exports.DropdownMenuContent = DropdownMenuContent;
    DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;
    const DropdownMenuItem = React.forwardRef(({ className, inset, ...props }, ref) => ((0, jsx_runtime_1.jsx)(DropdownMenuPrimitive.Item, { ref: ref, className: (0, utils_1.cn)("relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0", inset && "pl-8", className), ...props })));
    exports.DropdownMenuItem = DropdownMenuItem;
    DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;
    const DropdownMenuCheckboxItem = React.forwardRef(({ className, children, checked, ...props }, ref) => ((0, jsx_runtime_1.jsxs)(DropdownMenuPrimitive.CheckboxItem, { ref: ref, className: (0, utils_1.cn)("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", className), checked: checked, ...props, children: [(0, jsx_runtime_1.jsx)("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: (0, jsx_runtime_1.jsx)(DropdownMenuPrimitive.ItemIndicator, { children: (0, jsx_runtime_1.jsx)(lucide_react_1.Check, { className: "h-4 w-4" }) }) }), children] })));
    exports.DropdownMenuCheckboxItem = DropdownMenuCheckboxItem;
    DropdownMenuCheckboxItem.displayName =
        DropdownMenuPrimitive.CheckboxItem.displayName;
    const DropdownMenuRadioItem = React.forwardRef(({ className, children, ...props }, ref) => ((0, jsx_runtime_1.jsxs)(DropdownMenuPrimitive.RadioItem, { ref: ref, className: (0, utils_1.cn)("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", className), ...props, children: [(0, jsx_runtime_1.jsx)("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: (0, jsx_runtime_1.jsx)(DropdownMenuPrimitive.ItemIndicator, { children: (0, jsx_runtime_1.jsx)(lucide_react_1.Circle, { className: "h-2 w-2 fill-current" }) }) }), children] })));
    exports.DropdownMenuRadioItem = DropdownMenuRadioItem;
    DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;
    const DropdownMenuLabel = React.forwardRef(({ className, inset, ...props }, ref) => ((0, jsx_runtime_1.jsx)(DropdownMenuPrimitive.Label, { ref: ref, className: (0, utils_1.cn)("px-2 py-1.5 text-sm font-semibold", inset && "pl-8", className), ...props })));
    exports.DropdownMenuLabel = DropdownMenuLabel;
    DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;
    const DropdownMenuSeparator = React.forwardRef(({ className, ...props }, ref) => ((0, jsx_runtime_1.jsx)(DropdownMenuPrimitive.Separator, { ref: ref, className: (0, utils_1.cn)("-mx-1 my-1 h-px bg-muted", className), ...props })));
    exports.DropdownMenuSeparator = DropdownMenuSeparator;
    DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;
    const DropdownMenuShortcut = ({ className, ...props }) => {
        return ((0, jsx_runtime_1.jsx)("span", { className: (0, utils_1.cn)("ml-auto text-xs tracking-widest opacity-60", className), ...props }));
    };
    exports.DropdownMenuShortcut = DropdownMenuShortcut;
    DropdownMenuShortcut.displayName = "DropdownMenuShortcut";
});
//# sourceMappingURL=data:application/json;base64,