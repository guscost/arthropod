define(["require", "exports", "react/jsx-runtime", "react", "@radix-ui/react-toggle-group", "@/lib/utils", "@/components/ui/toggle"], function (require, exports, jsx_runtime_1, React, ToggleGroupPrimitive, utils_1, toggle_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ToggleGroup = ToggleGroup;
    exports.ToggleGroupItem = ToggleGroupItem;
    const ToggleGroupContext = React.createContext({
        size: "default",
        variant: "default",
        spacing: 0,
    });
    function ToggleGroup({ className, variant, size, spacing = 0, children, ...props }) {
        return ((0, jsx_runtime_1.jsx)(ToggleGroupPrimitive.Root, { "data-slot": "toggle-group", "data-variant": variant, "data-size": size, "data-spacing": spacing, style: { "--gap": spacing }, className: (0, utils_1.cn)("group/toggle-group flex w-fit items-center gap-[--spacing(var(--gap))] rounded-md data-[spacing=default]:data-[variant=outline]:shadow-xs", className), ...props, children: (0, jsx_runtime_1.jsx)(ToggleGroupContext.Provider, { value: { variant, size, spacing }, children: children }) }));
    }
    function ToggleGroupItem({ className, children, variant, size, ...props }) {
        const context = React.useContext(ToggleGroupContext);
        return ((0, jsx_runtime_1.jsx)(ToggleGroupPrimitive.Item, { "data-slot": "toggle-group-item", "data-variant": context.variant || variant, "data-size": context.size || size, "data-spacing": context.spacing, className: (0, utils_1.cn)((0, toggle_1.toggleVariants)({
                variant: context.variant || variant,
                size: context.size || size,
            }), "w-auto min-w-0 shrink-0 px-3 focus:z-10 focus-visible:z-10", "data-[spacing=0]:rounded-none data-[spacing=0]:shadow-none data-[spacing=0]:first:rounded-l-md data-[spacing=0]:last:rounded-r-md data-[spacing=0]:data-[variant=outline]:border-l-0 data-[spacing=0]:data-[variant=outline]:first:border-l", className), ...props, children: children }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLWdyb3VwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdWkvdG9nZ2xlLWdyb3VwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQUEsWUFBWSxDQUFDOzs7SUFrRkosa0NBQVc7SUFBRSwwQ0FBZTtJQXpFckMsTUFBTSxrQkFBa0IsR0FBRyxLQUFLLENBQUMsYUFBYSxDQUk1QztRQUNBLElBQUksRUFBRSxTQUFTO1FBQ2YsT0FBTyxFQUFFLFNBQVM7UUFDbEIsT0FBTyxFQUFFLENBQUM7S0FDWCxDQUFDLENBQUM7SUFFSCxTQUFTLFdBQVcsQ0FBQyxFQUNuQixTQUFTLEVBQ1QsT0FBTyxFQUNQLElBQUksRUFDSixPQUFPLEdBQUcsQ0FBQyxFQUNYLFFBQVEsRUFDUixHQUFHLEtBQUssRUFJUDtRQUNELE9BQU8sQ0FDTCx1QkFBQyxvQkFBb0IsQ0FBQyxJQUFJLGlCQUNkLGNBQWMsa0JBQ1YsT0FBTyxlQUNWLElBQUksa0JBQ0QsT0FBTyxFQUNyQixLQUFLLEVBQUUsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUF5QixFQUNsRCxTQUFTLEVBQUUsSUFBQSxVQUFFLEVBQ1gsMklBQTJJLEVBQzNJLFNBQVMsQ0FDVixLQUNHLEtBQUssWUFFVCx1QkFBQyxrQkFBa0IsQ0FBQyxRQUFRLElBQUMsS0FBSyxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsWUFDM0QsUUFBUSxHQUNtQixHQUNKLENBQzdCLENBQUM7SUFDSixDQUFDO0lBRUQsU0FBUyxlQUFlLENBQUMsRUFDdkIsU0FBUyxFQUNULFFBQVEsRUFDUixPQUFPLEVBQ1AsSUFBSSxFQUNKLEdBQUcsS0FBSyxFQUUyQjtRQUNuQyxNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFFckQsT0FBTyxDQUNMLHVCQUFDLG9CQUFvQixDQUFDLElBQUksaUJBQ2QsbUJBQW1CLGtCQUNmLE9BQU8sQ0FBQyxPQUFPLElBQUksT0FBTyxlQUM3QixPQUFPLENBQUMsSUFBSSxJQUFJLElBQUksa0JBQ2pCLE9BQU8sQ0FBQyxPQUFPLEVBQzdCLFNBQVMsRUFBRSxJQUFBLFVBQUUsRUFDWCxJQUFBLHVCQUFjLEVBQUM7Z0JBQ2IsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPLElBQUksT0FBTztnQkFDbkMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxJQUFJLElBQUksSUFBSTthQUMzQixDQUFDLEVBQ0YsNERBQTRELEVBQzVELDZPQUE2TyxFQUM3TyxTQUFTLENBQ1YsS0FDRyxLQUFLLFlBRVIsUUFBUSxHQUNpQixDQUM3QixDQUFDO0lBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCAqIGFzIFRvZ2dsZUdyb3VwUHJpbWl0aXZlIGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtdG9nZ2xlLWdyb3VwXCI7XG5pbXBvcnQgeyB0eXBlIFZhcmlhbnRQcm9wcyB9IGZyb20gXCJjbGFzcy12YXJpYW5jZS1hdXRob3JpdHlcIjtcblxuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIjtcbmltcG9ydCB7IHRvZ2dsZVZhcmlhbnRzIH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS90b2dnbGVcIjtcblxuY29uc3QgVG9nZ2xlR3JvdXBDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dDxcbiAgVmFyaWFudFByb3BzPHR5cGVvZiB0b2dnbGVWYXJpYW50cz4gJiB7XG4gICAgc3BhY2luZz86IG51bWJlcjtcbiAgfVxuPih7XG4gIHNpemU6IFwiZGVmYXVsdFwiLFxuICB2YXJpYW50OiBcImRlZmF1bHRcIixcbiAgc3BhY2luZzogMCxcbn0pO1xuXG5mdW5jdGlvbiBUb2dnbGVHcm91cCh7XG4gIGNsYXNzTmFtZSxcbiAgdmFyaWFudCxcbiAgc2l6ZSxcbiAgc3BhY2luZyA9IDAsXG4gIGNoaWxkcmVuLFxuICAuLi5wcm9wc1xufTogUmVhY3QuQ29tcG9uZW50UHJvcHM8dHlwZW9mIFRvZ2dsZUdyb3VwUHJpbWl0aXZlLlJvb3Q+ICZcbiAgVmFyaWFudFByb3BzPHR5cGVvZiB0b2dnbGVWYXJpYW50cz4gJiB7XG4gICAgc3BhY2luZz86IG51bWJlcjtcbiAgfSkge1xuICByZXR1cm4gKFxuICAgIDxUb2dnbGVHcm91cFByaW1pdGl2ZS5Sb290XG4gICAgICBkYXRhLXNsb3Q9XCJ0b2dnbGUtZ3JvdXBcIlxuICAgICAgZGF0YS12YXJpYW50PXt2YXJpYW50fVxuICAgICAgZGF0YS1zaXplPXtzaXplfVxuICAgICAgZGF0YS1zcGFjaW5nPXtzcGFjaW5nfVxuICAgICAgc3R5bGU9e3sgXCItLWdhcFwiOiBzcGFjaW5nIH0gYXMgUmVhY3QuQ1NTUHJvcGVydGllc31cbiAgICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICAgIFwiZ3JvdXAvdG9nZ2xlLWdyb3VwIGZsZXggdy1maXQgaXRlbXMtY2VudGVyIGdhcC1bLS1zcGFjaW5nKHZhcigtLWdhcCkpXSByb3VuZGVkLW1kIGRhdGEtW3NwYWNpbmc9ZGVmYXVsdF06ZGF0YS1bdmFyaWFudD1vdXRsaW5lXTpzaGFkb3cteHNcIixcbiAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICA+XG4gICAgICA8VG9nZ2xlR3JvdXBDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IHZhcmlhbnQsIHNpemUsIHNwYWNpbmcgfX0+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvVG9nZ2xlR3JvdXBDb250ZXh0LlByb3ZpZGVyPlxuICAgIDwvVG9nZ2xlR3JvdXBQcmltaXRpdmUuUm9vdD5cbiAgKTtcbn1cblxuZnVuY3Rpb24gVG9nZ2xlR3JvdXBJdGVtKHtcbiAgY2xhc3NOYW1lLFxuICBjaGlsZHJlbixcbiAgdmFyaWFudCxcbiAgc2l6ZSxcbiAgLi4ucHJvcHNcbn06IFJlYWN0LkNvbXBvbmVudFByb3BzPHR5cGVvZiBUb2dnbGVHcm91cFByaW1pdGl2ZS5JdGVtPiAmXG4gIFZhcmlhbnRQcm9wczx0eXBlb2YgdG9nZ2xlVmFyaWFudHM+KSB7XG4gIGNvbnN0IGNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0KFRvZ2dsZUdyb3VwQ29udGV4dCk7XG5cbiAgcmV0dXJuIChcbiAgICA8VG9nZ2xlR3JvdXBQcmltaXRpdmUuSXRlbVxuICAgICAgZGF0YS1zbG90PVwidG9nZ2xlLWdyb3VwLWl0ZW1cIlxuICAgICAgZGF0YS12YXJpYW50PXtjb250ZXh0LnZhcmlhbnQgfHwgdmFyaWFudH1cbiAgICAgIGRhdGEtc2l6ZT17Y29udGV4dC5zaXplIHx8IHNpemV9XG4gICAgICBkYXRhLXNwYWNpbmc9e2NvbnRleHQuc3BhY2luZ31cbiAgICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICAgIHRvZ2dsZVZhcmlhbnRzKHtcbiAgICAgICAgICB2YXJpYW50OiBjb250ZXh0LnZhcmlhbnQgfHwgdmFyaWFudCxcbiAgICAgICAgICBzaXplOiBjb250ZXh0LnNpemUgfHwgc2l6ZSxcbiAgICAgICAgfSksXG4gICAgICAgIFwidy1hdXRvIG1pbi13LTAgc2hyaW5rLTAgcHgtMyBmb2N1czp6LTEwIGZvY3VzLXZpc2libGU6ei0xMFwiLFxuICAgICAgICBcImRhdGEtW3NwYWNpbmc9MF06cm91bmRlZC1ub25lIGRhdGEtW3NwYWNpbmc9MF06c2hhZG93LW5vbmUgZGF0YS1bc3BhY2luZz0wXTpmaXJzdDpyb3VuZGVkLWwtbWQgZGF0YS1bc3BhY2luZz0wXTpsYXN0OnJvdW5kZWQtci1tZCBkYXRhLVtzcGFjaW5nPTBdOmRhdGEtW3ZhcmlhbnQ9b3V0bGluZV06Ym9yZGVyLWwtMCBkYXRhLVtzcGFjaW5nPTBdOmRhdGEtW3ZhcmlhbnQ9b3V0bGluZV06Zmlyc3Q6Ym9yZGVyLWxcIixcbiAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Ub2dnbGVHcm91cFByaW1pdGl2ZS5JdGVtPlxuICApO1xufVxuXG5leHBvcnQgeyBUb2dnbGVHcm91cCwgVG9nZ2xlR3JvdXBJdGVtIH07XG4iXX0=