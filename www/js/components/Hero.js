define(["require", "exports", "react/jsx-runtime", "react", "@radix-ui/react-select", "lucide-react", "@/components/ui/button"], function (require, exports, jsx_runtime_1, react_1, Select, lucide_react_1, button_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = Hero;
    const SelectItem = (0, react_1.forwardRef)(({ children, className, ...props }, forwardedRef) => {
        return ((0, jsx_runtime_1.jsxs)(Select.Item, { ...props, ref: forwardedRef, className: "flex justify-between items-center hover:bg-gray-100", children: [(0, jsx_runtime_1.jsx)(Select.ItemText, { children: children }), (0, jsx_runtime_1.jsx)(Select.ItemIndicator, { children: (0, jsx_runtime_1.jsx)(lucide_react_1.CheckIcon, {}) })] }));
    });
    function Hero() {
        const [count, setCount] = (0, react_1.useState)(0);
        return ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("h1", { children: ["Hello world x", count] }), (0, jsx_runtime_1.jsx)(button_1.Button, { className: "mt-2", onClick: () => setCount(count + 1), children: "Again!" }), (0, jsx_runtime_1.jsxs)(Select.Root, { onValueChange: (value) => setCount(parseInt(value, 10)), children: [(0, jsx_runtime_1.jsxs)(Select.Trigger, { className: "border rounded mt-2 px-4 py-2 flex gap-2 justify-between items-center w-56", "aria-label": "Number", children: [(0, jsx_runtime_1.jsx)(Select.Value, { placeholder: "Select a number..." }), (0, jsx_runtime_1.jsx)(Select.Icon, { children: (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronDownIcon, {}) })] }), (0, jsx_runtime_1.jsx)(Select.Portal, { children: (0, jsx_runtime_1.jsxs)(Select.Content, { className: "rounded border p-2 bg-white", children: [(0, jsx_runtime_1.jsx)(Select.ScrollUpButton, { className: "flex justify-center items-center", children: (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronUpIcon, {}) }), (0, jsx_runtime_1.jsxs)(Select.Viewport, { children: [(0, jsx_runtime_1.jsxs)(Select.Group, { children: [(0, jsx_runtime_1.jsx)(Select.Label, { className: "text-xs", children: "Small" }), (0, jsx_runtime_1.jsx)(SelectItem, { value: "1", children: "1" }), (0, jsx_runtime_1.jsx)(SelectItem, { value: "2", children: "2" }), (0, jsx_runtime_1.jsx)(SelectItem, { value: "3", children: "3" })] }), (0, jsx_runtime_1.jsx)(Select.Separator, {}), (0, jsx_runtime_1.jsxs)(Select.Group, { className: "mt-2", children: [(0, jsx_runtime_1.jsx)(Select.Label, { className: "text-xs", children: "Medium" }), (0, jsx_runtime_1.jsx)(SelectItem, { value: "10", children: "10" }), (0, jsx_runtime_1.jsx)(SelectItem, { value: "11", children: "11" }), (0, jsx_runtime_1.jsx)(SelectItem, { value: "12", disabled: true, children: "12" })] }), (0, jsx_runtime_1.jsx)(Select.Separator, {}), (0, jsx_runtime_1.jsxs)(Select.Group, { className: "mt-2", children: [(0, jsx_runtime_1.jsx)(Select.Label, { className: "text-xs", children: "Large" }), (0, jsx_runtime_1.jsx)(SelectItem, { value: "100", children: "100" }), (0, jsx_runtime_1.jsx)(SelectItem, { value: "101", children: "101" }), (0, jsx_runtime_1.jsx)(SelectItem, { value: "102", children: "102" })] })] }), (0, jsx_runtime_1.jsx)(Select.ScrollDownButton, { className: "flex justify-center items-center", children: (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronDownIcon, {}) })] }) })] })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGVyby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0hlcm8udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztJQXlCQSx1QkE4REM7SUFsRkQsTUFBTSxVQUFVLEdBQUcsSUFBQSxrQkFBVSxFQUMzQixDQUNFLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxHQUFHLEtBQUssRUFBMEIsRUFDekQsWUFBaUMsRUFDakMsRUFBRTtRQUNGLE9BQU8sQ0FDTCx3QkFBQyxNQUFNLENBQUMsSUFBSSxPQUNOLEtBQUssRUFDVCxHQUFHLEVBQUUsWUFBWSxFQUNqQixTQUFTLEVBQUMscURBQXFELGFBRS9ELHVCQUFDLE1BQU0sQ0FBQyxRQUFRLGNBQUUsUUFBUSxHQUFtQixFQUM3Qyx1QkFBQyxNQUFNLENBQUMsYUFBYSxjQUNuQix1QkFBQyx3QkFBUyxLQUFHLEdBQ1EsSUFDWCxDQUNmLENBQUM7SUFDSixDQUFDLENBQ0YsQ0FBQztJQUVGLFNBQXdCLElBQUk7UUFDMUIsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsR0FBRyxJQUFBLGdCQUFRLEVBQUMsQ0FBQyxDQUFDLENBQUM7UUFFdEMsT0FBTyxDQUNMLDRDQUNFLDREQUFrQixLQUFLLElBQU0sRUFFN0IsdUJBQUMsZUFBTSxJQUFDLFNBQVMsRUFBQyxNQUFNLEVBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLHVCQUVsRCxFQUVULHdCQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUMsYUFBYSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQyxhQUNsRSx3QkFBQyxNQUFNLENBQUMsT0FBTyxJQUNiLFNBQVMsRUFBQyw0RUFBNEUsZ0JBQzNFLFFBQVEsYUFFbkIsdUJBQUMsTUFBTSxDQUFDLEtBQUssSUFBQyxXQUFXLEVBQUMsb0JBQW9CLEdBQUcsRUFDakQsdUJBQUMsTUFBTSxDQUFDLElBQUksY0FDVix1QkFBQyw4QkFBZSxLQUFHLEdBQ1AsSUFDQyxFQUNqQix1QkFBQyxNQUFNLENBQUMsTUFBTSxjQUNaLHdCQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUMsU0FBUyxFQUFDLDZCQUE2QixhQUNyRCx1QkFBQyxNQUFNLENBQUMsY0FBYyxJQUFDLFNBQVMsRUFBQyxrQ0FBa0MsWUFDakUsdUJBQUMsNEJBQWEsS0FBRyxHQUNLLEVBQ3hCLHdCQUFDLE1BQU0sQ0FBQyxRQUFRLGVBQ2Qsd0JBQUMsTUFBTSxDQUFDLEtBQUssZUFDWCx1QkFBQyxNQUFNLENBQUMsS0FBSyxJQUFDLFNBQVMsRUFBQyxTQUFTLHNCQUFxQixFQUN0RCx1QkFBQyxVQUFVLElBQUMsS0FBSyxFQUFDLEdBQUcsa0JBQWUsRUFDcEMsdUJBQUMsVUFBVSxJQUFDLEtBQUssRUFBQyxHQUFHLGtCQUFlLEVBQ3BDLHVCQUFDLFVBQVUsSUFBQyxLQUFLLEVBQUMsR0FBRyxrQkFBZSxJQUN2QixFQUVmLHVCQUFDLE1BQU0sQ0FBQyxTQUFTLEtBQUcsRUFFcEIsd0JBQUMsTUFBTSxDQUFDLEtBQUssSUFBQyxTQUFTLEVBQUMsTUFBTSxhQUM1Qix1QkFBQyxNQUFNLENBQUMsS0FBSyxJQUFDLFNBQVMsRUFBQyxTQUFTLHVCQUFzQixFQUN2RCx1QkFBQyxVQUFVLElBQUMsS0FBSyxFQUFDLElBQUksbUJBQWdCLEVBQ3RDLHVCQUFDLFVBQVUsSUFBQyxLQUFLLEVBQUMsSUFBSSxtQkFBZ0IsRUFDdEMsdUJBQUMsVUFBVSxJQUFDLEtBQUssRUFBQyxJQUFJLEVBQUMsUUFBUSx5QkFFbEIsSUFDQSxFQUVmLHVCQUFDLE1BQU0sQ0FBQyxTQUFTLEtBQUcsRUFFcEIsd0JBQUMsTUFBTSxDQUFDLEtBQUssSUFBQyxTQUFTLEVBQUMsTUFBTSxhQUM1Qix1QkFBQyxNQUFNLENBQUMsS0FBSyxJQUFDLFNBQVMsRUFBQyxTQUFTLHNCQUFxQixFQUN0RCx1QkFBQyxVQUFVLElBQUMsS0FBSyxFQUFDLEtBQUssb0JBQWlCLEVBQ3hDLHVCQUFDLFVBQVUsSUFBQyxLQUFLLEVBQUMsS0FBSyxvQkFBaUIsRUFDeEMsdUJBQUMsVUFBVSxJQUFDLEtBQUssRUFBQyxLQUFLLG9CQUFpQixJQUMzQixJQUNDLEVBQ2xCLHVCQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsSUFBQyxTQUFTLEVBQUMsa0NBQWtDLFlBQ25FLHVCQUFDLDhCQUFlLEtBQUcsR0FDSyxJQUNYLEdBQ0gsSUFDSixJQUNWLENBQ1AsQ0FBQztJQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3J3YXJkUmVmLCBSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgKiBhcyBTZWxlY3QgZnJvbSBcIkByYWRpeC11aS9yZWFjdC1zZWxlY3RcIjtcbmltcG9ydCB7IENoZWNrSWNvbiwgQ2hldnJvbkRvd25JY29uLCBDaGV2cm9uVXBJY29uIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9idXR0b25cIjtcblxuY29uc3QgU2VsZWN0SXRlbSA9IGZvcndhcmRSZWYoXG4gIChcbiAgICB7IGNoaWxkcmVuLCBjbGFzc05hbWUsIC4uLnByb3BzIH06IFNlbGVjdC5TZWxlY3RJdGVtUHJvcHMsXG4gICAgZm9yd2FyZGVkUmVmOiBSZWY8SFRNTERpdkVsZW1lbnQ+LFxuICApID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPFNlbGVjdC5JdGVtXG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgcmVmPXtmb3J3YXJkZWRSZWZ9XG4gICAgICAgIGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLWNlbnRlciBob3ZlcjpiZy1ncmF5LTEwMFwiXG4gICAgICA+XG4gICAgICAgIDxTZWxlY3QuSXRlbVRleHQ+e2NoaWxkcmVufTwvU2VsZWN0Lkl0ZW1UZXh0PlxuICAgICAgICA8U2VsZWN0Lkl0ZW1JbmRpY2F0b3I+XG4gICAgICAgICAgPENoZWNrSWNvbiAvPlxuICAgICAgICA8L1NlbGVjdC5JdGVtSW5kaWNhdG9yPlxuICAgICAgPC9TZWxlY3QuSXRlbT5cbiAgICApO1xuICB9LFxuKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSGVybygpIHtcbiAgY29uc3QgW2NvdW50LCBzZXRDb3VudF0gPSB1c2VTdGF0ZSgwKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8aDE+SGVsbG8gd29ybGQgeHtjb3VudH08L2gxPlxuXG4gICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cIm10LTJcIiBvbkNsaWNrPXsoKSA9PiBzZXRDb3VudChjb3VudCArIDEpfT5cbiAgICAgICAgQWdhaW4hXG4gICAgICA8L0J1dHRvbj5cblxuICAgICAgPFNlbGVjdC5Sb290IG9uVmFsdWVDaGFuZ2U9eyh2YWx1ZSkgPT4gc2V0Q291bnQocGFyc2VJbnQodmFsdWUsIDEwKSl9PlxuICAgICAgICA8U2VsZWN0LlRyaWdnZXJcbiAgICAgICAgICBjbGFzc05hbWU9XCJib3JkZXIgcm91bmRlZCBtdC0yIHB4LTQgcHktMiBmbGV4IGdhcC0yIGp1c3RpZnktYmV0d2VlbiBpdGVtcy1jZW50ZXIgdy01NlwiXG4gICAgICAgICAgYXJpYS1sYWJlbD1cIk51bWJlclwiXG4gICAgICAgID5cbiAgICAgICAgICA8U2VsZWN0LlZhbHVlIHBsYWNlaG9sZGVyPVwiU2VsZWN0IGEgbnVtYmVyLi4uXCIgLz5cbiAgICAgICAgICA8U2VsZWN0Lkljb24+XG4gICAgICAgICAgICA8Q2hldnJvbkRvd25JY29uIC8+XG4gICAgICAgICAgPC9TZWxlY3QuSWNvbj5cbiAgICAgICAgPC9TZWxlY3QuVHJpZ2dlcj5cbiAgICAgICAgPFNlbGVjdC5Qb3J0YWw+XG4gICAgICAgICAgPFNlbGVjdC5Db250ZW50IGNsYXNzTmFtZT1cInJvdW5kZWQgYm9yZGVyIHAtMiBiZy13aGl0ZVwiPlxuICAgICAgICAgICAgPFNlbGVjdC5TY3JvbGxVcEJ1dHRvbiBjbGFzc05hbWU9XCJmbGV4IGp1c3RpZnktY2VudGVyIGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgICA8Q2hldnJvblVwSWNvbiAvPlxuICAgICAgICAgICAgPC9TZWxlY3QuU2Nyb2xsVXBCdXR0b24+XG4gICAgICAgICAgICA8U2VsZWN0LlZpZXdwb3J0PlxuICAgICAgICAgICAgICA8U2VsZWN0Lkdyb3VwPlxuICAgICAgICAgICAgICAgIDxTZWxlY3QuTGFiZWwgY2xhc3NOYW1lPVwidGV4dC14c1wiPlNtYWxsPC9TZWxlY3QuTGFiZWw+XG4gICAgICAgICAgICAgICAgPFNlbGVjdEl0ZW0gdmFsdWU9XCIxXCI+MTwvU2VsZWN0SXRlbT5cbiAgICAgICAgICAgICAgICA8U2VsZWN0SXRlbSB2YWx1ZT1cIjJcIj4yPC9TZWxlY3RJdGVtPlxuICAgICAgICAgICAgICAgIDxTZWxlY3RJdGVtIHZhbHVlPVwiM1wiPjM8L1NlbGVjdEl0ZW0+XG4gICAgICAgICAgICAgIDwvU2VsZWN0Lkdyb3VwPlxuXG4gICAgICAgICAgICAgIDxTZWxlY3QuU2VwYXJhdG9yIC8+XG5cbiAgICAgICAgICAgICAgPFNlbGVjdC5Hcm91cCBjbGFzc05hbWU9XCJtdC0yXCI+XG4gICAgICAgICAgICAgICAgPFNlbGVjdC5MYWJlbCBjbGFzc05hbWU9XCJ0ZXh0LXhzXCI+TWVkaXVtPC9TZWxlY3QuTGFiZWw+XG4gICAgICAgICAgICAgICAgPFNlbGVjdEl0ZW0gdmFsdWU9XCIxMFwiPjEwPC9TZWxlY3RJdGVtPlxuICAgICAgICAgICAgICAgIDxTZWxlY3RJdGVtIHZhbHVlPVwiMTFcIj4xMTwvU2VsZWN0SXRlbT5cbiAgICAgICAgICAgICAgICA8U2VsZWN0SXRlbSB2YWx1ZT1cIjEyXCIgZGlzYWJsZWQ+XG4gICAgICAgICAgICAgICAgICAxMlxuICAgICAgICAgICAgICAgIDwvU2VsZWN0SXRlbT5cbiAgICAgICAgICAgICAgPC9TZWxlY3QuR3JvdXA+XG5cbiAgICAgICAgICAgICAgPFNlbGVjdC5TZXBhcmF0b3IgLz5cblxuICAgICAgICAgICAgICA8U2VsZWN0Lkdyb3VwIGNsYXNzTmFtZT1cIm10LTJcIj5cbiAgICAgICAgICAgICAgICA8U2VsZWN0LkxhYmVsIGNsYXNzTmFtZT1cInRleHQteHNcIj5MYXJnZTwvU2VsZWN0LkxhYmVsPlxuICAgICAgICAgICAgICAgIDxTZWxlY3RJdGVtIHZhbHVlPVwiMTAwXCI+MTAwPC9TZWxlY3RJdGVtPlxuICAgICAgICAgICAgICAgIDxTZWxlY3RJdGVtIHZhbHVlPVwiMTAxXCI+MTAxPC9TZWxlY3RJdGVtPlxuICAgICAgICAgICAgICAgIDxTZWxlY3RJdGVtIHZhbHVlPVwiMTAyXCI+MTAyPC9TZWxlY3RJdGVtPlxuICAgICAgICAgICAgICA8L1NlbGVjdC5Hcm91cD5cbiAgICAgICAgICAgIDwvU2VsZWN0LlZpZXdwb3J0PlxuICAgICAgICAgICAgPFNlbGVjdC5TY3JvbGxEb3duQnV0dG9uIGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1jZW50ZXIgaXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgICAgIDxDaGV2cm9uRG93bkljb24gLz5cbiAgICAgICAgICAgIDwvU2VsZWN0LlNjcm9sbERvd25CdXR0b24+XG4gICAgICAgICAgPC9TZWxlY3QuQ29udGVudD5cbiAgICAgICAgPC9TZWxlY3QuUG9ydGFsPlxuICAgICAgPC9TZWxlY3QuUm9vdD5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdfQ==