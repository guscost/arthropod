define(["require", "exports", "react/jsx-runtime", "react", "@/components/ui/button", "@/components/ui/card", "@/components/ui/input", "@/components/ui/label", "@/components/ui/select", "@/components/ui/textarea"], function (require, exports, jsx_runtime_1, React, button_1, card_1, input_1, label_1, select_1, textarea_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CardsReportIssue = CardsReportIssue;
    function CardsReportIssue() {
        const id = React.useId();
        return ((0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { children: "Report an issue" }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { children: "What area are you having problems with?" })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: "flex flex-col gap-6", children: [(0, jsx_runtime_1.jsxs)("div", { className: "grid gap-4 sm:grid-cols-2", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-3", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: `area-${id}`, children: "Area" }), (0, jsx_runtime_1.jsxs)(select_1.Select, { defaultValue: "billing", children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, { id: `area-${id}`, "aria-label": "Area", className: "w-full", children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, { placeholder: "Select" }) }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, { children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "team", children: "Team" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "billing", children: "Billing" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "account", children: "Account" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "deployments", children: "Deployments" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "support", children: "Support" })] })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-3", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: `security-level-${id}`, children: "Security Level" }), (0, jsx_runtime_1.jsxs)(select_1.Select, { defaultValue: "2", children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, { id: `security-level-${id}`, className: "w-full [&_span]:!block [&_span]:truncate", "aria-label": "Security Level", children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, { placeholder: "Select level" }) }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, { children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "1", children: "Severity 1 (Highest)" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "2", children: "Severity 2" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "3", children: "Severity 3" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "4", children: "Severity 4 (Lowest)" })] })] })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-3", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: `subject-${id}`, children: "Subject" }), (0, jsx_runtime_1.jsx)(input_1.Input, { id: `subject-${id}`, placeholder: "I need help with..." })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-3", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: `description-${id}`, children: "Description" }), (0, jsx_runtime_1.jsx)(textarea_1.Textarea, { id: `description-${id}`, placeholder: "Please include all information relevant to your issue.", className: "min-h-28" })] })] }), (0, jsx_runtime_1.jsxs)(card_1.CardFooter, { className: "justify-end gap-2", children: [(0, jsx_runtime_1.jsx)(button_1.Button, { variant: "ghost", size: "sm", children: "Cancel" }), (0, jsx_runtime_1.jsx)(button_1.Button, { size: "sm", children: "Submit" })] })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3J0LWlzc3VlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvZGVtby1jYXJkcy9yZXBvcnQtaXNzdWUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7SUFBQSxZQUFZLENBQUE7OztJQXdCWiw0Q0F3RUM7SUF4RUQsU0FBZ0IsZ0JBQWdCO1FBQzlCLE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQTtRQUV4QixPQUFPLENBQ0wsd0JBQUMsV0FBSSxlQUNILHdCQUFDLGlCQUFVLGVBQ1QsdUJBQUMsZ0JBQVMsa0NBQTRCLEVBQ3RDLHVCQUFDLHNCQUFlLDBEQUVFLElBQ1AsRUFDYix3QkFBQyxrQkFBVyxJQUFDLFNBQVMsRUFBQyxxQkFBcUIsYUFDMUMsaUNBQUssU0FBUyxFQUFDLDJCQUEyQixhQUN4QyxpQ0FBSyxTQUFTLEVBQUMscUJBQXFCLGFBQ2xDLHVCQUFDLGFBQUssSUFBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUscUJBQWMsRUFDMUMsd0JBQUMsZUFBTSxJQUFDLFlBQVksRUFBQyxTQUFTLGFBQzVCLHVCQUFDLHNCQUFhLElBQ1osRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLGdCQUNMLE1BQU0sRUFDakIsU0FBUyxFQUFDLFFBQVEsWUFFbEIsdUJBQUMsb0JBQVcsSUFBQyxXQUFXLEVBQUMsUUFBUSxHQUFHLEdBQ3RCLEVBQ2hCLHdCQUFDLHNCQUFhLGVBQ1osdUJBQUMsbUJBQVUsSUFBQyxLQUFLLEVBQUMsTUFBTSxxQkFBa0IsRUFDMUMsdUJBQUMsbUJBQVUsSUFBQyxLQUFLLEVBQUMsU0FBUyx3QkFBcUIsRUFDaEQsdUJBQUMsbUJBQVUsSUFBQyxLQUFLLEVBQUMsU0FBUyx3QkFBcUIsRUFDaEQsdUJBQUMsbUJBQVUsSUFBQyxLQUFLLEVBQUMsYUFBYSw0QkFBeUIsRUFDeEQsdUJBQUMsbUJBQVUsSUFBQyxLQUFLLEVBQUMsU0FBUyx3QkFBcUIsSUFDbEMsSUFDVCxJQUNMLEVBQ04saUNBQUssU0FBUyxFQUFDLHFCQUFxQixhQUNsQyx1QkFBQyxhQUFLLElBQUMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLEVBQUUsK0JBQXdCLEVBQzlELHdCQUFDLGVBQU0sSUFBQyxZQUFZLEVBQUMsR0FBRyxhQUN0Qix1QkFBQyxzQkFBYSxJQUNaLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxFQUFFLEVBQzFCLFNBQVMsRUFBQywwQ0FBMEMsZ0JBQ3pDLGdCQUFnQixZQUUzQix1QkFBQyxvQkFBVyxJQUFDLFdBQVcsRUFBQyxjQUFjLEdBQUcsR0FDNUIsRUFDaEIsd0JBQUMsc0JBQWEsZUFDWix1QkFBQyxtQkFBVSxJQUFDLEtBQUssRUFBQyxHQUFHLHFDQUFrQyxFQUN2RCx1QkFBQyxtQkFBVSxJQUFDLEtBQUssRUFBQyxHQUFHLDJCQUF3QixFQUM3Qyx1QkFBQyxtQkFBVSxJQUFDLEtBQUssRUFBQyxHQUFHLDJCQUF3QixFQUM3Qyx1QkFBQyxtQkFBVSxJQUFDLEtBQUssRUFBQyxHQUFHLG9DQUFpQyxJQUN4QyxJQUNULElBQ0wsSUFDRixFQUNOLGlDQUFLLFNBQVMsRUFBQyxxQkFBcUIsYUFDbEMsdUJBQUMsYUFBSyxJQUFDLE9BQU8sRUFBRSxXQUFXLEVBQUUsRUFBRSx3QkFBaUIsRUFDaEQsdUJBQUMsYUFBSyxJQUFDLEVBQUUsRUFBRSxXQUFXLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBQyxxQkFBcUIsR0FBRyxJQUM1RCxFQUNOLGlDQUFLLFNBQVMsRUFBQyxxQkFBcUIsYUFDbEMsdUJBQUMsYUFBSyxJQUFDLE9BQU8sRUFBRSxlQUFlLEVBQUUsRUFBRSw0QkFBcUIsRUFDeEQsdUJBQUMsbUJBQVEsSUFDUCxFQUFFLEVBQUUsZUFBZSxFQUFFLEVBQUUsRUFDdkIsV0FBVyxFQUFDLHdEQUF3RCxFQUNwRSxTQUFTLEVBQUMsVUFBVSxHQUNwQixJQUNFLElBQ00sRUFDZCx3QkFBQyxpQkFBVSxJQUFDLFNBQVMsRUFBQyxtQkFBbUIsYUFDdkMsdUJBQUMsZUFBTSxJQUFDLE9BQU8sRUFBQyxPQUFPLEVBQUMsSUFBSSxFQUFDLElBQUksdUJBRXhCLEVBQ1QsdUJBQUMsZUFBTSxJQUFDLElBQUksRUFBQyxJQUFJLHVCQUFnQixJQUN0QixJQUNSLENBQ1IsQ0FBQTtJQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxyXG5cclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcclxuXHJcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvYnV0dG9uXCJcclxuaW1wb3J0IHtcclxuICBDYXJkLFxyXG4gIENhcmRDb250ZW50LFxyXG4gIENhcmREZXNjcmlwdGlvbixcclxuICBDYXJkRm9vdGVyLFxyXG4gIENhcmRIZWFkZXIsXHJcbiAgQ2FyZFRpdGxlLFxyXG59IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvY2FyZFwiXHJcbmltcG9ydCB7IElucHV0IH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9pbnB1dFwiXHJcbmltcG9ydCB7IExhYmVsIH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9sYWJlbFwiXHJcbmltcG9ydCB7XHJcbiAgU2VsZWN0LFxyXG4gIFNlbGVjdENvbnRlbnQsXHJcbiAgU2VsZWN0SXRlbSxcclxuICBTZWxlY3RUcmlnZ2VyLFxyXG4gIFNlbGVjdFZhbHVlLFxyXG59IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvc2VsZWN0XCJcclxuaW1wb3J0IHsgVGV4dGFyZWEgfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL3RleHRhcmVhXCJcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBDYXJkc1JlcG9ydElzc3VlKCkge1xyXG4gIGNvbnN0IGlkID0gUmVhY3QudXNlSWQoKVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPENhcmQ+XHJcbiAgICAgIDxDYXJkSGVhZGVyPlxyXG4gICAgICAgIDxDYXJkVGl0bGU+UmVwb3J0IGFuIGlzc3VlPC9DYXJkVGl0bGU+XHJcbiAgICAgICAgPENhcmREZXNjcmlwdGlvbj5cclxuICAgICAgICAgIFdoYXQgYXJlYSBhcmUgeW91IGhhdmluZyBwcm9ibGVtcyB3aXRoP1xyXG4gICAgICAgIDwvQ2FyZERlc2NyaXB0aW9uPlxyXG4gICAgICA8L0NhcmRIZWFkZXI+XHJcbiAgICAgIDxDYXJkQ29udGVudCBjbGFzc05hbWU9XCJmbGV4IGZsZXgtY29sIGdhcC02XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdhcC00IHNtOmdyaWQtY29scy0yXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wgZ2FwLTNcIj5cclxuICAgICAgICAgICAgPExhYmVsIGh0bWxGb3I9e2BhcmVhLSR7aWR9YH0+QXJlYTwvTGFiZWw+XHJcbiAgICAgICAgICAgIDxTZWxlY3QgZGVmYXVsdFZhbHVlPVwiYmlsbGluZ1wiPlxyXG4gICAgICAgICAgICAgIDxTZWxlY3RUcmlnZ2VyXHJcbiAgICAgICAgICAgICAgICBpZD17YGFyZWEtJHtpZH1gfVxyXG4gICAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIkFyZWFcIlxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsXCJcclxuICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICA8U2VsZWN0VmFsdWUgcGxhY2Vob2xkZXI9XCJTZWxlY3RcIiAvPlxyXG4gICAgICAgICAgICAgIDwvU2VsZWN0VHJpZ2dlcj5cclxuICAgICAgICAgICAgICA8U2VsZWN0Q29udGVudD5cclxuICAgICAgICAgICAgICAgIDxTZWxlY3RJdGVtIHZhbHVlPVwidGVhbVwiPlRlYW08L1NlbGVjdEl0ZW0+XHJcbiAgICAgICAgICAgICAgICA8U2VsZWN0SXRlbSB2YWx1ZT1cImJpbGxpbmdcIj5CaWxsaW5nPC9TZWxlY3RJdGVtPlxyXG4gICAgICAgICAgICAgICAgPFNlbGVjdEl0ZW0gdmFsdWU9XCJhY2NvdW50XCI+QWNjb3VudDwvU2VsZWN0SXRlbT5cclxuICAgICAgICAgICAgICAgIDxTZWxlY3RJdGVtIHZhbHVlPVwiZGVwbG95bWVudHNcIj5EZXBsb3ltZW50czwvU2VsZWN0SXRlbT5cclxuICAgICAgICAgICAgICAgIDxTZWxlY3RJdGVtIHZhbHVlPVwic3VwcG9ydFwiPlN1cHBvcnQ8L1NlbGVjdEl0ZW0+XHJcbiAgICAgICAgICAgICAgPC9TZWxlY3RDb250ZW50PlxyXG4gICAgICAgICAgICA8L1NlbGVjdD5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGZsZXgtY29sIGdhcC0zXCI+XHJcbiAgICAgICAgICAgIDxMYWJlbCBodG1sRm9yPXtgc2VjdXJpdHktbGV2ZWwtJHtpZH1gfT5TZWN1cml0eSBMZXZlbDwvTGFiZWw+XHJcbiAgICAgICAgICAgIDxTZWxlY3QgZGVmYXVsdFZhbHVlPVwiMlwiPlxyXG4gICAgICAgICAgICAgIDxTZWxlY3RUcmlnZ2VyXHJcbiAgICAgICAgICAgICAgICBpZD17YHNlY3VyaXR5LWxldmVsLSR7aWR9YH1cclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBbJl9zcGFuXTohYmxvY2sgWyZfc3Bhbl06dHJ1bmNhdGVcIlxyXG4gICAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIlNlY3VyaXR5IExldmVsXCJcclxuICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICA8U2VsZWN0VmFsdWUgcGxhY2Vob2xkZXI9XCJTZWxlY3QgbGV2ZWxcIiAvPlxyXG4gICAgICAgICAgICAgIDwvU2VsZWN0VHJpZ2dlcj5cclxuICAgICAgICAgICAgICA8U2VsZWN0Q29udGVudD5cclxuICAgICAgICAgICAgICAgIDxTZWxlY3RJdGVtIHZhbHVlPVwiMVwiPlNldmVyaXR5IDEgKEhpZ2hlc3QpPC9TZWxlY3RJdGVtPlxyXG4gICAgICAgICAgICAgICAgPFNlbGVjdEl0ZW0gdmFsdWU9XCIyXCI+U2V2ZXJpdHkgMjwvU2VsZWN0SXRlbT5cclxuICAgICAgICAgICAgICAgIDxTZWxlY3RJdGVtIHZhbHVlPVwiM1wiPlNldmVyaXR5IDM8L1NlbGVjdEl0ZW0+XHJcbiAgICAgICAgICAgICAgICA8U2VsZWN0SXRlbSB2YWx1ZT1cIjRcIj5TZXZlcml0eSA0IChMb3dlc3QpPC9TZWxlY3RJdGVtPlxyXG4gICAgICAgICAgICAgIDwvU2VsZWN0Q29udGVudD5cclxuICAgICAgICAgICAgPC9TZWxlY3Q+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wgZ2FwLTNcIj5cclxuICAgICAgICAgIDxMYWJlbCBodG1sRm9yPXtgc3ViamVjdC0ke2lkfWB9PlN1YmplY3Q8L0xhYmVsPlxyXG4gICAgICAgICAgPElucHV0IGlkPXtgc3ViamVjdC0ke2lkfWB9IHBsYWNlaG9sZGVyPVwiSSBuZWVkIGhlbHAgd2l0aC4uLlwiIC8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGZsZXgtY29sIGdhcC0zXCI+XHJcbiAgICAgICAgICA8TGFiZWwgaHRtbEZvcj17YGRlc2NyaXB0aW9uLSR7aWR9YH0+RGVzY3JpcHRpb248L0xhYmVsPlxyXG4gICAgICAgICAgPFRleHRhcmVhXHJcbiAgICAgICAgICAgIGlkPXtgZGVzY3JpcHRpb24tJHtpZH1gfVxyXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlBsZWFzZSBpbmNsdWRlIGFsbCBpbmZvcm1hdGlvbiByZWxldmFudCB0byB5b3VyIGlzc3VlLlwiXHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cIm1pbi1oLTI4XCJcclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ2FyZENvbnRlbnQ+XHJcbiAgICAgIDxDYXJkRm9vdGVyIGNsYXNzTmFtZT1cImp1c3RpZnktZW5kIGdhcC0yXCI+XHJcbiAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwiZ2hvc3RcIiBzaXplPVwic21cIj5cclxuICAgICAgICAgIENhbmNlbFxyXG4gICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgIDxCdXR0b24gc2l6ZT1cInNtXCI+U3VibWl0PC9CdXR0b24+XHJcbiAgICAgIDwvQ2FyZEZvb3Rlcj5cclxuICAgIDwvQ2FyZD5cclxuICApXHJcbn1cclxuIl19