define(["require", "exports", "react/jsx-runtime", "@/components/ui/avatar", "@/components/ui/button", "@/components/ui/card", "@/components/ui/input", "@/components/ui/label", "@/components/ui/select", "@/components/ui/separator"], function (require, exports, jsx_runtime_1, avatar_1, button_1, card_1, input_1, label_1, select_1, separator_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CardsShare = CardsShare;
    const people = [
        {
            name: "Olivia Martin",
            email: "m@example.com",
            avatar: "/avatars/03.png",
        },
        {
            name: "Isabella Nguyen",
            email: "b@example.com",
            avatar: "/avatars/04.png",
        },
        {
            name: "Sofia Davis",
            email: "p@example.com",
            avatar: "/avatars/05.png",
        },
        {
            name: "Ethan Thompson",
            email: "e@example.com",
            avatar: "/avatars/01.png",
        },
    ];
    function CardsShare() {
        return ((0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { children: "Share this document" }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { children: "Anyone with the link can view this document." })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "link", className: "sr-only", children: "Link" }), (0, jsx_runtime_1.jsx)(input_1.Input, { id: "link", value: "http://example.com/link/to/document", className: "h-8", readOnly: true }), (0, jsx_runtime_1.jsx)(button_1.Button, { size: "sm", variant: "outline", className: "shadow-none", children: "Copy Link" })] }), (0, jsx_runtime_1.jsx)(separator_1.Separator, { className: "my-4" }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-4", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-sm font-medium", children: "People with access" }), (0, jsx_runtime_1.jsx)("div", { className: "grid gap-6", children: people.map((person) => ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between gap-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-4", children: [(0, jsx_runtime_1.jsxs)(avatar_1.Avatar, { children: [(0, jsx_runtime_1.jsx)(avatar_1.AvatarImage, { src: person.avatar, alt: "Image" }), (0, jsx_runtime_1.jsx)(avatar_1.AvatarFallback, { children: person.name.charAt(0) })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { className: "text-sm leading-none font-medium", children: person.name }), (0, jsx_runtime_1.jsx)("p", { className: "text-muted-foreground text-sm", children: person.email })] })] }), (0, jsx_runtime_1.jsxs)(select_1.Select, { defaultValue: "edit", children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, { className: "ml-auto pr-2", "aria-label": "Edit", size: "sm", children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, { placeholder: "Select" }) }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, { align: "end", children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "edit", children: "Can edit" }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "view", children: "Can view" })] })] })] }, person.email))) })] })] })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9kZW1vLWNhcmRzL3NoYXJlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQUEsWUFBWSxDQUFDOzs7SUE0Q2IsZ0NBbUVDO0lBekZELE1BQU0sTUFBTSxHQUFHO1FBQ2I7WUFDRSxJQUFJLEVBQUUsZUFBZTtZQUNyQixLQUFLLEVBQUUsZUFBZTtZQUN0QixNQUFNLEVBQUUsaUJBQWlCO1NBQzFCO1FBQ0Q7WUFDRSxJQUFJLEVBQUUsaUJBQWlCO1lBQ3ZCLEtBQUssRUFBRSxlQUFlO1lBQ3RCLE1BQU0sRUFBRSxpQkFBaUI7U0FDMUI7UUFDRDtZQUNFLElBQUksRUFBRSxhQUFhO1lBQ25CLEtBQUssRUFBRSxlQUFlO1lBQ3RCLE1BQU0sRUFBRSxpQkFBaUI7U0FDMUI7UUFDRDtZQUNFLElBQUksRUFBRSxnQkFBZ0I7WUFDdEIsS0FBSyxFQUFFLGVBQWU7WUFDdEIsTUFBTSxFQUFFLGlCQUFpQjtTQUMxQjtLQUNGLENBQUM7SUFDRixTQUFnQixVQUFVO1FBQ3hCLE9BQU8sQ0FDTCx3QkFBQyxXQUFJLGVBQ0gsd0JBQUMsaUJBQVUsZUFDVCx1QkFBQyxnQkFBUyxzQ0FBZ0MsRUFDMUMsdUJBQUMsc0JBQWUsK0RBRUUsSUFDUCxFQUNiLHdCQUFDLGtCQUFXLGVBQ1YsaUNBQUssU0FBUyxFQUFDLHlCQUF5QixhQUN0Qyx1QkFBQyxhQUFLLElBQUMsT0FBTyxFQUFDLE1BQU0sRUFBQyxTQUFTLEVBQUMsU0FBUyxxQkFFakMsRUFDUix1QkFBQyxhQUFLLElBQ0osRUFBRSxFQUFDLE1BQU0sRUFDVCxLQUFLLEVBQUMscUNBQXFDLEVBQzNDLFNBQVMsRUFBQyxLQUFLLEVBQ2YsUUFBUSxTQUNSLEVBQ0YsdUJBQUMsZUFBTSxJQUFDLElBQUksRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLFNBQVMsRUFBQyxTQUFTLEVBQUMsYUFBYSwwQkFFbEQsSUFDTCxFQUNOLHVCQUFDLHFCQUFTLElBQUMsU0FBUyxFQUFDLE1BQU0sR0FBRyxFQUM5QixpQ0FBSyxTQUFTLEVBQUMscUJBQXFCLGFBQ2xDLGdDQUFLLFNBQVMsRUFBQyxxQkFBcUIsbUNBQXlCLEVBQzdELGdDQUFLLFNBQVMsRUFBQyxZQUFZLFlBQ3hCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQ3RCLGlDQUVFLFNBQVMsRUFBQyx5Q0FBeUMsYUFFbkQsaUNBQUssU0FBUyxFQUFDLHlCQUF5QixhQUN0Qyx3QkFBQyxlQUFNLGVBQ0wsdUJBQUMsb0JBQVcsSUFBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUMsT0FBTyxHQUFHLEVBQy9DLHVCQUFDLHVCQUFjLGNBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQWtCLElBQ2pELEVBQ1QsNENBQ0UsOEJBQUcsU0FBUyxFQUFDLGtDQUFrQyxZQUM1QyxNQUFNLENBQUMsSUFBSSxHQUNWLEVBQ0osOEJBQUcsU0FBUyxFQUFDLCtCQUErQixZQUN6QyxNQUFNLENBQUMsS0FBSyxHQUNYLElBQ0EsSUFDRixFQUNOLHdCQUFDLGVBQU0sSUFBQyxZQUFZLEVBQUMsTUFBTSxhQUN6Qix1QkFBQyxzQkFBYSxJQUNaLFNBQVMsRUFBQyxjQUFjLGdCQUNiLE1BQU0sRUFDakIsSUFBSSxFQUFDLElBQUksWUFFVCx1QkFBQyxvQkFBVyxJQUFDLFdBQVcsRUFBQyxRQUFRLEdBQUcsR0FDdEIsRUFDaEIsd0JBQUMsc0JBQWEsSUFBQyxLQUFLLEVBQUMsS0FBSyxhQUN4Qix1QkFBQyxtQkFBVSxJQUFDLEtBQUssRUFBQyxNQUFNLHlCQUFzQixFQUM5Qyx1QkFBQyxtQkFBVSxJQUFDLEtBQUssRUFBQyxNQUFNLHlCQUFzQixJQUNoQyxJQUNULEtBN0JKLE1BQU0sQ0FBQyxLQUFLLENBOEJiLENBQ1AsQ0FBQyxHQUNFLElBQ0YsSUFDTSxJQUNULENBQ1IsQ0FBQztJQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgQXZhdGFyLCBBdmF0YXJGYWxsYmFjaywgQXZhdGFySW1hZ2UgfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2F2YXRhclwiO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9idXR0b25cIjtcbmltcG9ydCB7XG4gIENhcmQsXG4gIENhcmRDb250ZW50LFxuICBDYXJkRGVzY3JpcHRpb24sXG4gIENhcmRIZWFkZXIsXG4gIENhcmRUaXRsZSxcbn0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9jYXJkXCI7XG5pbXBvcnQgeyBJbnB1dCB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvaW5wdXRcIjtcbmltcG9ydCB7IExhYmVsIH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9sYWJlbFwiO1xuaW1wb3J0IHtcbiAgU2VsZWN0LFxuICBTZWxlY3RDb250ZW50LFxuICBTZWxlY3RJdGVtLFxuICBTZWxlY3RUcmlnZ2VyLFxuICBTZWxlY3RWYWx1ZSxcbn0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9zZWxlY3RcIjtcbmltcG9ydCB7IFNlcGFyYXRvciB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvc2VwYXJhdG9yXCI7XG5cbmNvbnN0IHBlb3BsZSA9IFtcbiAge1xuICAgIG5hbWU6IFwiT2xpdmlhIE1hcnRpblwiLFxuICAgIGVtYWlsOiBcIm1AZXhhbXBsZS5jb21cIixcbiAgICBhdmF0YXI6IFwiL2F2YXRhcnMvMDMucG5nXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIklzYWJlbGxhIE5ndXllblwiLFxuICAgIGVtYWlsOiBcImJAZXhhbXBsZS5jb21cIixcbiAgICBhdmF0YXI6IFwiL2F2YXRhcnMvMDQucG5nXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIlNvZmlhIERhdmlzXCIsXG4gICAgZW1haWw6IFwicEBleGFtcGxlLmNvbVwiLFxuICAgIGF2YXRhcjogXCIvYXZhdGFycy8wNS5wbmdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiRXRoYW4gVGhvbXBzb25cIixcbiAgICBlbWFpbDogXCJlQGV4YW1wbGUuY29tXCIsXG4gICAgYXZhdGFyOiBcIi9hdmF0YXJzLzAxLnBuZ1wiLFxuICB9LFxuXTtcbmV4cG9ydCBmdW5jdGlvbiBDYXJkc1NoYXJlKCkge1xuICByZXR1cm4gKFxuICAgIDxDYXJkPlxuICAgICAgPENhcmRIZWFkZXI+XG4gICAgICAgIDxDYXJkVGl0bGU+U2hhcmUgdGhpcyBkb2N1bWVudDwvQ2FyZFRpdGxlPlxuICAgICAgICA8Q2FyZERlc2NyaXB0aW9uPlxuICAgICAgICAgIEFueW9uZSB3aXRoIHRoZSBsaW5rIGNhbiB2aWV3IHRoaXMgZG9jdW1lbnQuXG4gICAgICAgIDwvQ2FyZERlc2NyaXB0aW9uPlxuICAgICAgPC9DYXJkSGVhZGVyPlxuICAgICAgPENhcmRDb250ZW50PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0yXCI+XG4gICAgICAgICAgPExhYmVsIGh0bWxGb3I9XCJsaW5rXCIgY2xhc3NOYW1lPVwic3Itb25seVwiPlxuICAgICAgICAgICAgTGlua1xuICAgICAgICAgIDwvTGFiZWw+XG4gICAgICAgICAgPElucHV0XG4gICAgICAgICAgICBpZD1cImxpbmtcIlxuICAgICAgICAgICAgdmFsdWU9XCJodHRwOi8vZXhhbXBsZS5jb20vbGluay90by9kb2N1bWVudFwiXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJoLThcIlxuICAgICAgICAgICAgcmVhZE9ubHlcbiAgICAgICAgICAvPlxuICAgICAgICAgIDxCdXR0b24gc2l6ZT1cInNtXCIgdmFyaWFudD1cIm91dGxpbmVcIiBjbGFzc05hbWU9XCJzaGFkb3ctbm9uZVwiPlxuICAgICAgICAgICAgQ29weSBMaW5rXG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8U2VwYXJhdG9yIGNsYXNzTmFtZT1cIm15LTRcIiAvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wgZ2FwLTRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1tZWRpdW1cIj5QZW9wbGUgd2l0aCBhY2Nlc3M8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ2FwLTZcIj5cbiAgICAgICAgICAgIHtwZW9wbGUubWFwKChwZXJzb24pID0+IChcbiAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIGtleT17cGVyc29uLmVtYWlsfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBnYXAtNFwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC00XCI+XG4gICAgICAgICAgICAgICAgICA8QXZhdGFyPlxuICAgICAgICAgICAgICAgICAgICA8QXZhdGFySW1hZ2Ugc3JjPXtwZXJzb24uYXZhdGFyfSBhbHQ9XCJJbWFnZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgIDxBdmF0YXJGYWxsYmFjaz57cGVyc29uLm5hbWUuY2hhckF0KDApfTwvQXZhdGFyRmFsbGJhY2s+XG4gICAgICAgICAgICAgICAgICA8L0F2YXRhcj5cbiAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtc20gbGVhZGluZy1ub25lIGZvbnQtbWVkaXVtXCI+XG4gICAgICAgICAgICAgICAgICAgICAge3BlcnNvbi5uYW1lfVxuICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtbXV0ZWQtZm9yZWdyb3VuZCB0ZXh0LXNtXCI+XG4gICAgICAgICAgICAgICAgICAgICAge3BlcnNvbi5lbWFpbH1cbiAgICAgICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPFNlbGVjdCBkZWZhdWx0VmFsdWU9XCJlZGl0XCI+XG4gICAgICAgICAgICAgICAgICA8U2VsZWN0VHJpZ2dlclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJtbC1hdXRvIHByLTJcIlxuICAgICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwiRWRpdFwiXG4gICAgICAgICAgICAgICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxTZWxlY3RWYWx1ZSBwbGFjZWhvbGRlcj1cIlNlbGVjdFwiIC8+XG4gICAgICAgICAgICAgICAgICA8L1NlbGVjdFRyaWdnZXI+XG4gICAgICAgICAgICAgICAgICA8U2VsZWN0Q29udGVudCBhbGlnbj1cImVuZFwiPlxuICAgICAgICAgICAgICAgICAgICA8U2VsZWN0SXRlbSB2YWx1ZT1cImVkaXRcIj5DYW4gZWRpdDwvU2VsZWN0SXRlbT5cbiAgICAgICAgICAgICAgICAgICAgPFNlbGVjdEl0ZW0gdmFsdWU9XCJ2aWV3XCI+Q2FuIHZpZXc8L1NlbGVjdEl0ZW0+XG4gICAgICAgICAgICAgICAgICA8L1NlbGVjdENvbnRlbnQ+XG4gICAgICAgICAgICAgICAgPC9TZWxlY3Q+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9DYXJkQ29udGVudD5cbiAgICA8L0NhcmQ+XG4gICk7XG59XG4iXX0=